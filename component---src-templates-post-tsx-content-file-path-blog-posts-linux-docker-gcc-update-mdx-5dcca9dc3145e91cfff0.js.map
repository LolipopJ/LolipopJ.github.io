{"version":3,"file":"component---src-templates-post-tsx-content-file-path-blog-posts-linux-docker-gcc-update-mdx-5dcca9dc3145e91cfff0.js","mappings":"yMAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,OAAQ,SACRC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,KAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,kEAAmE,KAAMU,EAAAA,cAAoBb,EAAYI,KAAM,CACvMU,wBAAyB,CACvBC,OAAQ,6dAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,WAAYU,EAAAA,cAAoBb,EAAYK,OAAQ,KAAM,OAAQ,yEAA0E,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,kDAAmDU,EAAAA,cAAoBb,EAAYK,OAAQ,KAAM,eAAgB,qCAAsC,KAAMQ,EAAAA,cAAoBb,EAAYI,KAAM,CAC/aU,wBAAyB,CACvBC,OAAQ,6OAER,KAAMF,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,cAAe,KAAMO,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,KAAMU,EAAAA,cAAoBb,EAAYO,EAAG,CACzJS,KAAM,oCACL,UAAW,uBAAwBH,EAAAA,cAAoBb,EAAYI,KAAM,CAC1EU,wBAAyB,CACvBC,OAAQ,iDAER,yBAA0B,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,SAAUU,EAAAA,cAAoBb,EAAYI,KAAM,CAC3HU,wBAAyB,CACvBC,OAAQ,mDAER,UAAWF,EAAAA,cAAoBb,EAAYI,KAAM,CACnDU,wBAAyB,CACvBC,OAAQ,4DAER,UAAWF,EAAAA,cAAoBb,EAAYI,KAAM,CACnDU,wBAAyB,CACvBC,OAAQ,0DAER,UAAW,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,8BAA+BU,EAAAA,cAAoBb,EAAYI,KAAM,CACjIU,wBAAyB,CACvBC,OAAQ,oDAER,SAAU,KAAMF,EAAAA,cAAoBb,EAAYI,KAAM,CACxDU,wBAAyB,CACvBC,OAAQ,2SAER,KAAMF,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,cAAe,KAAMO,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,2BAA4B,KAAMU,EAAAA,cAAoBb,EAAYI,KAAM,CACxLU,wBAAyB,CACvBC,OAAQ,2RAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,kBAAmBU,EAAAA,cAAoBb,EAAYI,KAAM,CAC1GU,wBAAyB,CACvBC,OAAQ,8CAER,oCAAqC,KAAMF,EAAAA,cAAoBb,EAAYI,KAAM,CACnFU,wBAAyB,CACvBC,OAAQ,sRAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,QAASU,EAAAA,cAAoBb,EAAYI,KAAM,CAChGU,wBAAyB,CACvBC,OAAQ,iFAER,UAAWF,EAAAA,cAAoBb,EAAYI,KAAM,CACnDU,wBAAyB,CACvBC,OAAQ,iHAER,cAAeF,EAAAA,cAAoBb,EAAYI,KAAM,CACvDU,wBAAyB,CACvBC,OAAQ,yEAER,eAAgB,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,kBAAmBU,EAAAA,cAAoBb,EAAYI,KAAM,CAC1HU,wBAAyB,CACvBC,OAAQ,+CAER,cAAeF,EAAAA,cAAoBb,EAAYI,KAAM,CACvDU,wBAAyB,CACvBC,OAAQ,4CAER,KAAMF,EAAAA,cAAoBb,EAAYI,KAAM,CAC9CU,wBAAyB,CACvBC,OAAQ,6CAER,KAAMF,EAAAA,cAAoBb,EAAYI,KAAM,CAC9CU,wBAAyB,CACvBC,OAAQ,4CAER,OAAQF,EAAAA,cAAoBb,EAAYI,KAAM,CAChDU,wBAAyB,CACvBC,OAAQ,4CAER,mBAAoB,KAAMF,EAAAA,cAAoBb,EAAYI,KAAM,CAClEU,wBAAyB,CACvBC,OAAQ,4rEAER,KAAMF,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,UAAW,KAAMO,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,YAAaU,EAAAA,cAAoBb,EAAYI,KAAM,CAC/JU,wBAAyB,CACvBC,OAAQ,mDAER,+BAAgC,KAAMF,EAAAA,cAAoBb,EAAYI,KAAM,CAC9EU,wBAAyB,CACvBC,OAAQ,6TAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,SAAUU,EAAAA,cAAoBb,EAAYI,KAAM,CACjGU,wBAAyB,CACvBC,OAAQ,oDAER,eAAgBF,EAAAA,cAAoBb,EAAYI,KAAM,CACxDU,wBAAyB,CACvBC,OAAQ,yDAER,kBAAmB,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,uFAAwFU,EAAAA,cAAoBb,EAAYK,OAAQ,KAAM,MAAO,OAAQ,KAAMQ,EAAAA,cAAoBb,EAAYI,KAAM,CACrQU,wBAAyB,CACvBC,OAAQ,gTAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,wBAAyBU,EAAAA,cAAoBb,EAAYI,KAAM,CAChHU,wBAAyB,CACvBC,OAAQ,kDAER,QAAS,KAAMF,EAAAA,cAAoBb,EAAYI,KAAM,CACvDU,wBAAyB,CACvBC,OAAQ,kKAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,kBAAmBU,EAAAA,cAAoBb,EAAYI,KAAM,CAC1GU,wBAAyB,CACvBC,OAAQ,iDAER,UAAWF,EAAAA,cAAoBb,EAAYI,KAAM,CACnDU,wBAAyB,CACvBC,OAAQ,6CAER,oBAAqB,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,gCAAiC,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,qDAAsDU,EAAAA,cAAoBb,EAAYI,KAAM,CAClPU,wBAAyB,CACvBC,OAAQ,2CAER,QAASF,EAAAA,cAAoBb,EAAYO,EAAG,CAC9CS,KAAM,oFACL,QAAS,8DAA+D,KAAMH,EAAAA,cAAoBb,EAAYI,KAAM,CACrHU,wBAAyB,CACvBC,OAAQ,gQAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,0BAA2B,KAAMU,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,4DAA6D,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,+CAAgD,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,sBAAuB,KAAMU,EAAAA,cAAoBb,EAAYI,KAAM,CACpbU,wBAAyB,CACvBC,OAAQ,uNAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,UAAWU,EAAAA,cAAoBb,EAAYI,KAAM,CAClGU,wBAAyB,CACvBC,OAAQ,+CAER,iBAAkBF,EAAAA,cAAoBb,EAAYK,OAAQ,KAAM,QAAS,mBAAoB,KAAMQ,EAAAA,cAAoBb,EAAYI,KAAM,CAC3IU,wBAAyB,CACvBC,OAAQ,0nCAER,KAAMF,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,SAAU,KAAMO,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,uBAAwBU,EAAAA,cAAoBb,EAAYI,KAAM,CACzKU,wBAAyB,CACvBC,OAAQ,qDAER,iCAAkC,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,6CAA8C,KAAMU,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,QAAS,KAAMO,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,KAAMI,EAAAA,cAAoBb,EAAYU,GAAI,KAAMG,EAAAA,cAAoBb,EAAYO,EAAG,CAC7TS,KAAM,yCACL,iCAAkC,MACvC,CAKA,MAJA,SAAoBjB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,KAAsBZ,EAAMa,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWnB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8EC3JA,MAqBMa,EAAa,CACjBL,EAXYY,IACZ,IAAI,KAACH,EAAO,GAAE,SAAEI,GAAYD,EAC5B,MAAME,IAAmBL,SAAoCA,EAAKM,WAAW,MACvEC,EAAaF,EAAiBL,EAAO,IAAIQ,mBAAmBR,EAAKS,MAAM,MAC7E,OAAOZ,EAAAA,cAAoB,IAAK,CAC9BG,KAAMO,EACNG,OAAQL,EAAiB,cAAWM,EACpCC,IAAK,cACJR,EAAS,EAIZS,IAvBoB9B,IACpB,MAAM,IAAC+B,EAAM,wCAAuC,IAAEC,KAAQC,GAAajC,EAC3E,OAAOc,EAAAA,cAAoB,IAAK,CAC9BG,KAAMe,EACN,gBAAiB,UACjB,eAAgBD,GACfjB,EAAAA,cAAoB,MAAOZ,OAAOC,OAAO,CAC1C6B,IAAKA,EACLD,IAAKA,GACJE,IAAY,EAefC,KAAI,IACJC,KAAIA,EAAAA,IAEAC,EAAeC,IACnB,IAAI,SAAChB,EAAQ,KAAEiB,GAAQD,EACvB,MAAOE,KAAMC,aAAa,MAACC,EAAOC,KAAMC,EAAYC,QAASC,EAAiB,WAAEC,EAAU,KAAEC,EAAI,WAAEC,GAAa,KAAUV,EACnHW,EAAanC,EAAAA,OAAa,MAC1B4B,EAAOQ,IAAMP,GACbQ,EAAcN,EAAoBK,IAAML,GAAqBH,EAE7DU,EADQF,MACSG,KAAKF,EAAa,QAYzC,OAXArC,EAAAA,WAAgB,KACd,IAAIwC,EACJ,MAAMC,EAAqE,QAA9CD,EAAsBL,EAAWO,eAA6C,IAAxBF,OAAiC,EAASA,EAAoBG,iBAAiB,4BAOlK,OANAF,SAA0EA,EAAoBG,SAAQC,IACpG,MAAMC,EAAQD,EAAKtC,SAASwC,KAAK,GACjCF,EAAKG,aAAa,gBAAiB,WACnCH,EAAKG,aAAa,eAAgBF,EAAM7B,IAAI,IAE9CgC,EAAAA,GAASC,KAAK,mBACP,IAAMD,EAAAA,GAASE,OAAO,kBAAkB,GAC9C,IACInD,EAAAA,cAAoB,MAAO,CAChCoD,UAAW,2CACVpD,EAAAA,cAAoB,MAAO,CAC5BoD,UAAW,wBACTpB,aAA+C,EAASA,EAAWqB,SAAWrD,EAAAA,cAAoBsD,EAAAA,EAAU,CAC9GC,KAAMvB,EAAW,GACjBoB,UAAW,oBACTpD,EAAAA,cAAoB,KAAM,CAC5BoD,UAAW,sBACVzB,GAAQ3B,EAAAA,cAAoB,MAAO,CACpCoD,UAAW,kDACVvB,GAAc7B,EAAAA,cAAoB,OAAQ,CAC3C2B,MAAO,SAASC,EAAK4B,qBAAqBnB,EAAYmB,cACrD5B,EAAK6B,OAAO,sBAAuBxB,aAAmC,EAASA,EAAKoB,SAAWrD,EAAAA,cAAoB,MAAO,CAC3HoD,UAAW,uDACVnB,EAAKyB,KAAIC,GAAO3D,EAAAA,cAAoB4D,EAAAA,EAAK,CAC1CC,IAAKF,EACLJ,KAAMI,EACNP,UAAW,wCACLpD,EAAAA,cAAoB,UAAW,CACrC8D,IAAK3B,EACLiB,UAAW,mBACVlB,GAAcI,EAAW,KAAOtC,EAAAA,cAAoB,aAAc,CACnEoD,UAAW,gCACV,OAA4BpD,EAAAA,cAAoB,SAAU,KAAM,SAAmCsC,EAAU,OAAkB,yCAAmOtC,EAAAA,cAAoB+D,EAAAA,EAAa,CACpYhE,WAAYA,GACXQ,IAAW,EAGHyD,EAAOC,IAClB,IAAI,KAACzC,GAAQyC,EACb,OAAOjE,EAAAA,cAAoBkE,EAAAA,EAAK,CAC9BvC,MAAOwC,OAAO3C,EAAKC,IAAIC,YAAYC,QACnC,EAGW,SAASyC,EAAiBlF,GACvC,OAAOc,EAAAA,cAAoBsB,EAAcpC,EAAOc,EAAAA,cAAoBqE,EAAqBnF,GAC3F,C","sources":["webpack://homepage/./blog/posts/linux-docker-gcc-update.mdx","webpack://homepage/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\",\n    hr: \"hr\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"如果软件源可用，可以使用 CentOS 的 yum 包管理器或 Ubuntu 的 apt 包管理器等一键安装 GCC，例如：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">yum <span class=\\\"token parameter variable\\\">-y</span> <span class=\\\"token function\\\">install</span> gcc\\nyum <span class=\\\"token parameter variable\\\">-y</span> <span class=\\\"token function\\\">install</span> gcc-c++\\n\\n<span class=\\\"token comment\\\"># 或是一键安装开发工具软件包，包括 gcc, g++ 等</span>\\nyum groupinstall <span class=\\\"token string\\\">\\\"Development Tools\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"本文适用于系统中\", React.createElement(_components.strong, null, \"包含有\"), \"其它版本的 GCC 编译器情况下，手动更新或降级 GCC 编译器。编译 GCC 的过程十分耗时，如果能使用包管理器尽量还是使用包管理器吧。\"), \"\\n\", React.createElement(_components.p, null, \"NOTE: 如果仅使用 GCC 进行编译操作或不确定当前系统能否兼容新版本的 GCC，建议在 \", React.createElement(_components.strong, null, \"Docker 容器环境\"), \"中执行编译和安装操作，并在容器中使用 GCC 编译器进行编译源码。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># 查看当前系统中 GCC 的版本</span>\\ngcc <span class=\\\"token parameter variable\\\">-v</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"下载 GCC 并解压\"), \"\\n\", React.createElement(_components.p, null, \"在 \", React.createElement(_components.a, {\n    href: \"https://gcc.gnu.org/mirrors.html\"\n  }, \"GCC 官网\"), \"选择下载 GCC 的镜像站点，选择进入 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">release/</code>\"\n    }\n  }), \" 目录，选择需要的 GCC 版本下载即可。\"), \"\\n\", React.createElement(_components.p, null, \"本文以安装 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">GCC 10.3.0</code>\"\n    }\n  }), \" 为例，进入 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">release/gcc-10.3.0/</code>\"\n    }\n  }), \" 目录，选择 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gcc-10.3.0.tar.gz</code>\"\n    }\n  }), \" 进行下载。\"), \"\\n\", React.createElement(_components.p, null, \"将压缩包传入 Docker 容器环境，并解压到容器的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/usr/local/</code>\"\n    }\n  }), \" 目录下。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">tar</span> <span class=\\\"token parameter variable\\\">-xf</span> gcc-10.3.0.tar.gz <span class=\\\"token parameter variable\\\">-C</span> /usr/local/</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"下载 GCC 依赖包\"), \"\\n\", React.createElement(_components.p, null, \"执行以下命令，下载 GCC 编译所需的依赖包：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token builtin class-name\\\">cd</span> /usr/local/gcc-10.3.0\\n<span class=\\\"token comment\\\"># 执行脚本下载依赖包</span>\\n./contrib/download_prerequisites</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"对于较老版本的 GCC（例如 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">4.9.4</code>\"\n    }\n  }), \" 版本），执行脚本时可能会无法连接服务器，可以更换代理进行下载：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># 编辑 contrib/download_prerequisites 文件</span>\\n<span class=\\\"token function\\\">vim</span> ./contrib/download_prerequisites</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"将文件中 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ftp://gcc.gnu.org/pub/gcc/infrastructure</code>\"\n    }\n  }), \" 字段更换为 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">http://www.mirrorservice.org/sites/sourceware.org/pub/gcc/infrastructure</code>\"\n    }\n  }), \"，然后再在根目录执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">./contrib/download_prerequisites</code>\"\n    }\n  }), \" 命令下载依赖包即可。\"), \"\\n\", React.createElement(_components.p, null, \"对于较新版本的 GCC（例如 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">10.3.0</code>\"\n    }\n  }), \" 版本），依赖包包括 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gmp</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mpfr</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mpc</code>\"\n    }\n  }), \" 以及 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">isl</code>\"\n    }\n  }), \"。提示如下，表示依赖下载成功：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token number\\\">2021</span>-04-19 <span class=\\\"token number\\\">15</span>:32:27 URL:http://gcc.gnu.org/pub/gcc/infrastructure/gmp-6.1.0.tar.bz2 <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2383840</span>/2383840<span class=\\\"token punctuation\\\">]</span> -<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">\\\"./gmp-6.1.0.tar.bz2\\\"</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token number\\\">2021</span>-04-19 <span class=\\\"token number\\\">15</span>:32:30 URL:http://gcc.gnu.org/pub/gcc/infrastructure/mpfr-3.1.4.tar.bz2 <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1279284</span>/1279284<span class=\\\"token punctuation\\\">]</span> -<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">\\\"./mpfr-3.1.4.tar.bz2\\\"</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token number\\\">2021</span>-04-19 <span class=\\\"token number\\\">15</span>:32:34 URL:http://gcc.gnu.org/pub/gcc/infrastructure/mpc-1.0.3.tar.gz <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">669925</span>/669925<span class=\\\"token punctuation\\\">]</span> -<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">\\\"./mpc-1.0.3.tar.gz\\\"</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token number\\\">2021</span>-04-19 <span class=\\\"token number\\\">15</span>:32:38 URL:http://gcc.gnu.org/pub/gcc/infrastructure/isl-0.18.tar.bz2 <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1658291</span>/1658291<span class=\\\"token punctuation\\\">]</span> -<span class=\\\"token operator\\\">></span> <span class=\\\"token string\\\">\\\"./isl-0.18.tar.bz2\\\"</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span>\\ngmp-6.1.0.tar.bz2: OK\\nmpfr-3.1.4.tar.bz2: OK\\nmpc-1.0.3.tar.gz: OK\\nisl-0.18.tar.bz2: OK\\nAll prerequisites downloaded successfully.</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"编译 GCC\"), \"\\n\", React.createElement(_components.p, null, \"回到上一级目录即 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/usr/local</code>\"\n    }\n  }), \"，手动创建一个目录，存放编译 GCC 源码生成的文件：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token builtin class-name\\\">cd</span> /usr/local\\n<span class=\\\"token function\\\">mkdir</span> gcc-build-10.3.0\\n<span class=\\\"token builtin class-name\\\">cd</span> gcc-build-10.3.0</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"现在我们在 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/usr/local/</code>\"\n    }\n  }), \" 路径下创建了一个名为 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gcc-build-10.3.0</code>\"\n    }\n  }), \" 的目录，并进入到此目录中。\"), \"\\n\", React.createElement(_components.p, null, \"GCC 编译器支持多种编程语言的编译，但我们一般使用它来编译 C 和 C++ 语言程序的源码。因此在编译 GCC 之前可以配置只启用 C 和 C++ 语言支持。这一步为\", React.createElement(_components.strong, null, \"可选\"), \"操作：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">/usr/local/gcc-10.3.0/configure --enable-checking<span class=\\\"token operator\\\">=</span>release --enable-languages<span class=\\\"token operator\\\">=</span>c,c++ --disable-multilib</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"如果不需要禁用多语言编译支持，则直接运行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">configure</code>\"\n    }\n  }), \" 即可：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">/usr/local/gcc-10.3.0/configure</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"执行完成后，会在当前路径创建 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Makefile</code>\"\n    }\n  }), \" 文件，执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">make</code>\"\n    }\n  }), \" 命令编译 GCC 源程序即可。\"), \"\\n\", React.createElement(_components.p, null, \"编译过程会占用很大的空间，请确保当前目录的空间足够使用。\"), \"\\n\", React.createElement(_components.p, null, \"考虑到单作业执行编译操作十分之慢（参考文档的作者在他的机器上花费了 6 小时才完成编译），可以设置 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">-j</code>\"\n    }\n  }), \" 选项执行\", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/414714/compiling-with-g-using-multiple-cores\"\n  }, \"并行作业\"), \"，选项后边的数字建议为 CPU 内核数量的 1.5 倍甚至 2 倍。如下述命令同时启用 8 个作业并行编译 GCC：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">make</span> <span class=\\\"token parameter variable\\\">-j</span> <span class=\\\"token number\\\">8</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"现在，忘记这边的事情，去做一些其它的事儿吧！\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"Tue Apr 20 9:52 CST 2021 - Tue Apr 20 12:33:29 CST 2021.\"), \"\\n\", React.createElement(_components.p, null, \"好久不见！我的机器在 8 个作业并行编译的情况下，大约花费了 2.5 小时完成了编译。\"), \"\\n\", React.createElement(_components.p, null, \"现在执行下述命令安装 GCC 即可：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">make</span> <span class=\\\"token function\\\">install</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"此时直接执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gcc -v</code>\"\n    }\n  }), \" 仍会显示以前安装的版本，在\", React.createElement(_components.strong, null, \"重启系统\"), \"之后就会显示为当前安装的版本。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># 重启容器环境</span>\\n<span class=\\\"token function\\\">docker</span> restart <span class=\\\"token variable\\\">${CONTAINER}</span>\\n\\n<span class=\\\"token comment\\\"># 检查安装是否成功</span>\\ngcc <span class=\\\"token parameter variable\\\">-v</span>\\n\\n<span class=\\\"token comment\\\"># 显示如下内容表示安装成功</span>\\nUsing built-in specs.\\n<span class=\\\"token assign-left variable\\\">COLLECT_GCC</span><span class=\\\"token operator\\\">=</span>gcc\\n<span class=\\\"token assign-left variable\\\">COLLECT_LTO_WRAPPER</span><span class=\\\"token operator\\\">=</span>/usr/local/libexec/gcc/x86_64-pc-linux-gnu/10.3.0/lto-wrapper\\nTarget: x86_64-pc-linux-gnu\\nConfigured with: /usr/local/gcc-10.3.0/configure --enable-checking<span class=\\\"token operator\\\">=</span>release --enable-languages<span class=\\\"token operator\\\">=</span>c,c++ --disable-multilib\\nThread model: posix\\nSupported LTO compression algorithms: zlib\\ngcc version <span class=\\\"token number\\\">10.3</span>.0 <span class=\\\"token punctuation\\\">(</span>GCC<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"文末碎碎念\"), \"\\n\", React.createElement(_components.p, null, \"我没有在 Docker 容器环境里执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">make install</code>\"\n    }\n  }), \" 操作，接着直接重启了当前主机，导致主机出现问题没法登陆。\"), \"\\n\", React.createElement(_components.p, null, \"一般建议编译和安装操作都在 Docker 容器环境里进行，不要直接操作宿主机环境！\"), \"\\n\", React.createElement(_components.h2, null, \"参考文档\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"http://c.biancheng.net/view/7933.html\"\n  }, \"GCC 编译器下载和安装教程（针对 Linux 发行版）\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/homepage/homepage/blog/posts/linux-docker-gcc-update.mdx\";\nimport {Fancybox} from \"@fancyapps/ui\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\";\nimport Card from \"../components/card\";\nimport Category from \"../components/category\";\nimport SEO from \"../components/seo\";\nimport Tag from \"../components/tag\";\nconst FancyBoxImage = props => {\n  const {alt = \"The author is too lazy to give an alt\", src, ...restProps} = props;\n  return React.createElement(\"a\", {\n    href: src,\n    \"data-fancybox\": \"gallery\",\n    \"data-caption\": alt\n  }, React.createElement(\"img\", Object.assign({\n    src: src,\n    alt: alt\n  }, restProps)));\n};\nconst ALink = _ref => {\n  let {href = \"\", children} = _ref;\n  const isExternalHref = !(href !== null && href !== void 0 && href.startsWith(\"#\"));\n  const parsedHref = isExternalHref ? href : `#${encodeURIComponent(href.slice(1))}`;\n  return React.createElement(\"a\", {\n    href: parsedHref,\n    target: isExternalHref ? \"_blank\" : undefined,\n    rel: \"noreferrer\"\n  }, children);\n};\nconst components = {\n  a: ALink,\n  img: FancyBoxImage,\n  Card,\n  Link\n};\nconst PostTemplate = _ref2 => {\n  let {children, data} = _ref2;\n  const {mdx: {frontmatter: {title, date: dateString, updated: updatedDateString, categories, tags, timeliness = true}}} = data;\n  const articleRef = React.useRef(null);\n  const date = dayjs(dateString);\n  const updatedDate = updatedDateString ? dayjs(updatedDateString) : date;\n  const today = dayjs();\n  const diffDays = today.diff(updatedDate, \"days\");\n  React.useEffect(() => {\n    var _articleRef$current;\n    const optimizedImageLinks = (_articleRef$current = articleRef.current) === null || _articleRef$current === void 0 ? void 0 : _articleRef$current.querySelectorAll(\"a.gatsby-resp-image-link\");\n    optimizedImageLinks === null || optimizedImageLinks === void 0 ? void 0 : optimizedImageLinks.forEach(link => {\n      const image = link.children.item(1);\n      link.setAttribute(\"data-fancybox\", \"gallery\");\n      link.setAttribute(\"data-caption\", image.alt);\n    });\n    Fancybox.bind(\"[data-fancybox]\");\n    return () => Fancybox.unbind(\"[data-fancybox]\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mx-auto flex max-w-xl flex-col gap-y-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex flex-col gap-4\"\n  }, (categories === null || categories === void 0 ? void 0 : categories.length) && React.createElement(Category, {\n    name: categories[0],\n    className: \"item-selectable\"\n  }), React.createElement(\"h1\", {\n    className: \"text-3xl font-bold\"\n  }, title), React.createElement(\"div\", {\n    className: \"item-secondary flex flex-col gap-2 lg:flex-row\"\n  }, dateString && React.createElement(\"span\", {\n    title: `首次发布于：${date.toString()}\\n最后更新于：${updatedDate.toString()}`\n  }, date.format(\"MM 月 DD 日 YYYY 年\")), (tags === null || tags === void 0 ? void 0 : tags.length) && React.createElement(\"div\", {\n    className: \"flex flex-1 flex-wrap gap-2 lg:before:content-['\\u2022']\"\n  }, tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag,\n    className: \"item-secondary item-selectable\"\n  }))))), React.createElement(\"article\", {\n    ref: articleRef,\n    className: \"heti post-entry\"\n  }, timeliness && diffDays > 365 && React.createElement(\"blockquote\", {\n    className: \"border-l-4 border-orange-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u6700\\u540E\\u66F4\\u65B0\\u4E8E \", diffDays, \" \\u5929\\u524D\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u968F\\u7740\\u65F6\\u95F4\\u7684\\u63A8\\u79FB\\u800C\\u53D8\\u5F97\\u4E0D\\u518D\\u9002\\u7528\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\nconst query = \"2697480803\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: String(data.mdx.frontmatter.title)\n  });\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","strong","h2","a","hr","ul","li","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","_ref","children","isExternalHref","startsWith","parsedHref","encodeURIComponent","slice","target","undefined","rel","img","alt","src","restProps","Card","Link","PostTemplate","_ref2","data","mdx","frontmatter","title","date","dateString","updated","updatedDateString","categories","tags","timeliness","articleRef","dayjs","updatedDate","diffDays","diff","_articleRef$current","optimizedImageLinks","current","querySelectorAll","forEach","link","image","item","setAttribute","Fancybox","bind","unbind","className","length","Category","name","toString","format","map","tag","Tag","key","ref","MDXProvider","Head","_ref3","SEO","String","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}