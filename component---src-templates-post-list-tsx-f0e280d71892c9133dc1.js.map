{"version":3,"file":"component---src-templates-post-list-tsx-f0e280d71892c9133dc1.js","mappings":"kIAuBA,IAdgCA,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAClD,MAAQC,MAAOE,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,KAE1C,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aACGL,EAAM,MAAIE,GAEbG,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,IACjCF,EACA,C,mGCPP,MAeaO,EAAOC,IAAyD,IAAAC,EAAA,IAAxD,YAAEC,GAAiDF,EACtE,MAAM,SAAEG,EAAQ,IAAEC,GAAQF,EAC1B,OAAON,EAAAA,cAACS,EAAAA,EAAG,CAACd,MAAsB,QAAjBU,EAAEE,QAAAA,EAAYC,SAAG,IAAAH,EAAAA,EAAI,QAAU,EAGlD,UApBuEX,IAEjE,IAFkE,YACtEY,GACDZ,EACC,MAAM,MAAEgB,EAAQ,IAAOJ,EACvB,OACEN,EAAAA,cAAA,MAAIW,UAAU,+BACXD,EAAME,KAAKC,GACVb,EAAAA,cAAA,MAAIc,IAAKD,EAAKE,IACZf,EAAAA,cAACgB,EAAAA,EAAI,CAACH,KAAMA,EAAMI,KAAK,aAGxB,C","sources":["webpack://homepage/./src/components/seo.tsx","webpack://homepage/./src/templates/post-list.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport interface SEOProps {\n  title: string;\n  children?: React.ReactElement;\n}\n\nconst SEO: React.FC<SEOProps> = ({ title, children }) => {\n  const { title: siteTitle, description } = useSiteMetadata();\n\n  return (\n    <>\n      <title>\n        {title} • {siteTitle}\n      </title>\n      <meta name=\"description\" content={description} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import { HeadProps, PageProps } from \"gatsby\";\nimport * as React from \"react\";\n\nimport Post, { type PostProps } from \"../components/post\";\nimport SEO from \"../components/seo\";\n\ninterface PostPageContext {\n  posts: PostProps[\"post\"][];\n  category?: string;\n  tag?: string;\n}\n\nconst PostListTemplate: React.FC<PageProps<object, PostPageContext>> = ({\n  pageContext,\n}) => {\n  const { posts = [] } = pageContext;\n  return (\n    <ol className=\"mb-8 grid grid-cols-1 gap-4\">\n      {posts.map((post) => (\n        <li key={post.id}>\n          <Post post={post} size=\"large\" />\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nexport const Head = ({ pageContext }: HeadProps<object, PostPageContext>) => {\n  const { category, tag } = pageContext;\n  return <SEO title={category ?? tag ?? \"博客列表\"} />;\n};\n\nexport default PostListTemplate;\n"],"names":["_ref","title","children","siteTitle","description","useSiteMetadata","React","name","content","Head","_ref2","_ref3","pageContext","category","tag","SEO","posts","className","map","post","key","id","Post","size"],"sourceRoot":""}