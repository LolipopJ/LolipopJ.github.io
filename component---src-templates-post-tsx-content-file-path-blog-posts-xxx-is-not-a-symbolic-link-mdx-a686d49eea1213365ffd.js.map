{"version":3,"file":"component---src-templates-post-tsx-content-file-path-blog-posts-xxx-is-not-a-symbolic-link-mdx-a686d49eea1213365ffd.js","mappings":"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","sources":["webpack://homepage/./blog/posts/xxx-is-not-a-symbolic-link.mdx","webpack://homepage/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    span: \"span\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"问题描述\"), \"\\n\", React.createElement(_components.p, null, \"在 CentOS 环境下执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">yum update</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ldconfig</code>\"\n    }\n  }), \" 命令时都出现提示警告，节选内容如下所示：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">ldconfig: /OSM/lib/librdmacm.so.1 is not a symbolic <span class=\\\"token function\\\">link</span>\\nldconfig: /OSM/lib/libgrpc++_reflection.so.1 is not a symbolic <span class=\\\"token function\\\">link</span>\\nldconfig: /OSM/lib/libupb.so.9 is not a symbolic <span class=\\\"token function\\\">link</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"错误分析\"), \"\\n\", React.createElement(_components.p, null, \"进入到对应目录下查找可以发现，这里的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">librdmacm.so.1</code>\"\n    }\n  }), \" 与 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">librdmacm.so.1.1.17.4</code>\"\n    }\n  }), \" 实际上是相同的动态库文件，而非我们期望的符号链接和动态库文件。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token punctuation\\\">[</span>root@xxx ~<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\"># cd /OSM/lib</span>\\n<span class=\\\"token punctuation\\\">[</span>root@xxx lib<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\"># find librdmacm.so.1* | xargs ls -l</span>\\n-rwx------. <span class=\\\"token number\\\">1</span> root root <span class=\\\"token number\\\">442208</span> Mar  <span class=\\\"token number\\\">9</span> <span class=\\\"token number\\\">16</span>:13 librdmacm.so.1\\n-rwx------. <span class=\\\"token number\\\">1</span> root root <span class=\\\"token number\\\">442208</span> Mar  <span class=\\\"token number\\\">9</span> <span class=\\\"token number\\\">16</span>:13 librdmacm.so.1.1.17.4</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"这个错误的产生原因是，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">librdmacm.so.1</code>\"\n    }\n  }), \" 在正常情况下应该是一个指向 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">librdmacm.so.1.1.17.4</code>\"\n    }\n  }), \" 文件的软链接，但却变成了一个动态库文件。\"), \"\\n\", React.createElement(_components.p, null, \"在一般情况下，这个错误并不会导致严重的问题；但假如目录下有多个不同版本的动态库文件，软链接可能无法正确获取到最新版本，产生隐患。\"), \"\\n\", React.createElement(_components.p, null, \"解决这个问题只需要将 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">librdmacm.so.1</code>\"\n    }\n  }), \" 修改为正常的软链接文件，重新链接两个文件就可以了。\"), \"\\n\", React.createElement(_components.h2, null, \"解决方案\"), \"\\n\", React.createElement(_components.p, null, \"执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ln -sf [动态库文件或源文件] [符号链接或目标文件]</code>\"\n    }\n  }), \" 即可，其中 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">-s</code>\"\n    }\n  }), \" 指创建软链接，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">-f</code>\"\n    }\n  }), \" 指强制执行。例如：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token punctuation\\\">[</span>root@xxx lib<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\"># ln -sf librdmacm.so.1.1.17.4 librdmacm.so.1</span>\\n<span class=\\\"token punctuation\\\">[</span>root@xxx lib<span class=\\\"token punctuation\\\">]</span><span class=\\\"token comment\\\"># find librdmacm.so.1* | xargs ls -l</span>\\nlrwxrwxrwx. <span class=\\\"token number\\\">1</span> root root     <span class=\\\"token number\\\">21</span> Mar <span class=\\\"token number\\\">10</span> <span class=\\\"token number\\\">16</span>:26 librdmacm.so.1 -<span class=\\\"token operator\\\">></span> librdmacm.so.1.1.17.4\\n-rwx------. <span class=\\\"token number\\\">1</span> root root <span class=\\\"token number\\\">442208</span> Mar  <span class=\\\"token number\\\">9</span> <span class=\\\"token number\\\">16</span>:13 librdmacm.so.1.1.17.4</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"现在正如我们预期的，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">librdmacm.so.1</code>\"\n    }\n  }), \" 正确指向了 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">librdmacm.so.1.1.17.4</code>\"\n    }\n  }), \"。\"), \"\\n\", React.createElement(_components.h3, null, \"更好的方式\"), \"\\n\", React.createElement(_components.p, null, \"假如同时报了很多个类似的提示，应当如何处理呢？\"), \"\\n\", React.createElement(_components.p, null, \"我们知道执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ldconfig</code>\"\n    }\n  }), \" 命令时，会自动为关联目录下的所有动态库文件创建对应的软链接。因此我们只需要删除掉这些重复的文件，再执行命令就可以了。\"), \"\\n\", React.createElement(_components.p, null, \"将 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ldconfig</code>\"\n    }\n  }), \" 命令的错误输出重定向到临时文件中，读取内容，组合使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cut</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">rm</code>\"\n    }\n  }), \" 命令即可实现删除重复文件，接下来删除存储错误信息的临时文件。最后再次执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ldconfig</code>\"\n    }\n  }), \" 创建软链接。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># 标准错误输出到 dupNote 临时文件中</span>\\nldconfig <span class=\\\"token operator\\\"><span class=\\\"token file-descriptor important\\\">2</span>></span> dupNote\\n<span class=\\\"token comment\\\"># 删除重复的动态库（非软链接）文件</span>\\n<span class=\\\"token function\\\">cat</span> dupNote <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">cut</span> <span class=\\\"token parameter variable\\\">-c</span> <span class=\\\"token number\\\">11</span>- <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">rev</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">cut</span> <span class=\\\"token parameter variable\\\">-c</span> <span class=\\\"token number\\\">23</span>- <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">rev</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">xargs</span> <span class=\\\"token function\\\">rm</span> <span class=\\\"token parameter variable\\\">-rf</span>\\n<span class=\\\"token comment\\\"># 删除刚刚创建的临时文件</span>\\n<span class=\\\"token function\\\">rm</span> <span class=\\\"token parameter variable\\\">-rf</span> dupNote\\n<span class=\\\"token comment\\\"># 创建软链接</span>\\nldconfig</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"当然可以合起来变成一条命令使用：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">ldconfig <span class=\\\"token operator\\\"><span class=\\\"token file-descriptor important\\\">2</span>></span> dupNote <span class=\\\"token punctuation\\\">;</span> <span class=\\\"token function\\\">cat</span> dupNote <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">cut</span> <span class=\\\"token parameter variable\\\">-c</span> <span class=\\\"token number\\\">11</span>- <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">rev</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">cut</span> <span class=\\\"token parameter variable\\\">-c</span> <span class=\\\"token number\\\">23</span>- <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">rev</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">xargs</span> <span class=\\\"token function\\\">rm</span> <span class=\\\"token parameter variable\\\">-rf</span> <span class=\\\"token punctuation\\\">;</span> <span class=\\\"token function\\\">rm</span> <span class=\\\"token parameter variable\\\">-rf</span> dupNote <span class=\\\"token punctuation\\\">;</span> ldconfig</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"现在执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ldconfig</code>\"\n    }\n  }), \" 不再提示 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*** is not a symbolic link</code>\"\n    }\n  }), \" 错误，问题顺利解决！\"), \"\\n\", React.createElement(_components.h2, null, \"相关链接\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://blog.csdn.net/qq_34213260/article/details/107399507\"\n  }, \"/usr/lib/*** is not a symbolic link 问题解决 - CSDN\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.runoob.com/linux/linux-comm-ln.html\"\n  }, \"Linux ln 命令 - 菜鸟教程\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/homepage/homepage/blog/posts/xxx-is-not-a-symbolic-link.mdx\";\nimport {Fancybox} from \"@fancyapps/ui\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\";\nimport Card from \"../components/card\";\nimport Category from \"../components/category\";\nimport SEO from \"../components/seo\";\nimport Tag from \"../components/tag\";\nconst FancyBoxImage = props => {\n  const {alt = \"The author is too lazy to give an alt\", src, ...restProps} = props;\n  return React.createElement(\"a\", {\n    href: src,\n    \"data-fancybox\": \"gallery\",\n    \"data-caption\": alt\n  }, React.createElement(\"img\", Object.assign({\n    src: src,\n    alt: alt\n  }, restProps)));\n};\nconst ALink = _ref => {\n  let {href = \"\", children} = _ref;\n  const isExternalHref = !(href !== null && href !== void 0 && href.startsWith(\"#\"));\n  const parsedHref = isExternalHref ? href : `#${encodeURIComponent(href.slice(1))}`;\n  return React.createElement(\"a\", {\n    href: parsedHref,\n    target: isExternalHref ? \"_blank\" : undefined,\n    rel: \"noreferrer\"\n  }, children);\n};\nconst components = {\n  a: ALink,\n  img: FancyBoxImage,\n  Card,\n  Link\n};\nconst PostTemplate = _ref2 => {\n  let {children, data} = _ref2;\n  const {mdx: {frontmatter: {title, date: dateString, updated: updatedDateString, categories, tags, timeliness}}} = data;\n  const articleRef = React.useRef(null);\n  const date = dayjs(dateString);\n  const updatedDate = updatedDateString ? dayjs(updatedDateString) : date;\n  const today = dayjs();\n  const diffDays = today.diff(updatedDate, \"days\");\n  React.useEffect(() => {\n    var _articleRef$current;\n    const optimizedImageLinks = (_articleRef$current = articleRef.current) === null || _articleRef$current === void 0 ? void 0 : _articleRef$current.querySelectorAll(\"a.gatsby-resp-image-link\");\n    optimizedImageLinks === null || optimizedImageLinks === void 0 ? void 0 : optimizedImageLinks.forEach(link => {\n      const image = link.children.item(1);\n      link.setAttribute(\"data-fancybox\", \"gallery\");\n      link.setAttribute(\"data-caption\", image.alt);\n    });\n    Fancybox.bind(\"[data-fancybox]\");\n    return () => Fancybox.unbind(\"[data-fancybox]\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mx-auto flex max-w-xl flex-col gap-y-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex flex-col gap-4\"\n  }, (categories === null || categories === void 0 ? void 0 : categories.length) && React.createElement(Category, {\n    name: categories[0],\n    className: \"item-selectable\"\n  }), React.createElement(\"h1\", {\n    className: \"text-3xl font-bold\"\n  }, title), React.createElement(\"div\", {\n    className: \"item-secondary flex flex-col gap-2 lg:flex-row\"\n  }, dateString && React.createElement(\"span\", {\n    title: `首次发布于：${date.toString()}\\n最后更新于：${updatedDate.toString()}`\n  }, date.format(\"MM 月 DD 日 YYYY 年\")), (tags === null || tags === void 0 ? void 0 : tags.length) && React.createElement(\"div\", {\n    className: \"flex flex-1 flex-wrap gap-2 lg:before:content-['\\u2022']\"\n  }, tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag,\n    className: \"item-secondary item-selectable\"\n  }))))), React.createElement(\"article\", {\n    ref: articleRef,\n    className: \"heti post-entry\"\n  }, timeliness !== false && diffDays > 365 && React.createElement(\"blockquote\", {\n    className: \"border-l-4 border-orange-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u6700\\u540E\\u66F4\\u65B0\\u4E8E \", diffDays, \" \\u5929\\u524D\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u968F\\u7740\\u65F6\\u95F4\\u7684\\u63A8\\u79FB\\u800C\\u53D8\\u5F97\\u4E0D\\u518D\\u9002\\u7528\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\nconst query = \"24864635\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: String(data.mdx.frontmatter.title)\n  });\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","span","h3","ul","li","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","_ref","children","isExternalHref","startsWith","parsedHref","encodeURIComponent","slice","target","undefined","rel","img","alt","src","restProps","Card","Link","PostTemplate","_ref2","data","mdx","frontmatter","title","date","dateString","updated","updatedDateString","categories","tags","timeliness","articleRef","dayjs","updatedDate","diffDays","diff","_articleRef$current","optimizedImageLinks","current","querySelectorAll","forEach","link","image","item","setAttribute","Fancybox","bind","unbind","className","length","Category","name","toString","format","map","tag","Tag","key","ref","MDXProvider","Head","_ref3","SEO","String","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}