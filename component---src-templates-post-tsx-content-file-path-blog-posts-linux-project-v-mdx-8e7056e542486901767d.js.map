{"version":3,"file":"component---src-templates-post-tsx-content-file-path-blog-posts-linux-project-v-mdx-8e7056e542486901767d.js","mappings":"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","sources":["webpack://homepage/./blog/posts/linux-project-v.mdx","webpack://homepage/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"下载 Release\"), \"\\n\", React.createElement(_components.p, null, \"在 Project-V 的 \", React.createElement(_components.a, {\n    href: \"https://github.com/v2fly/v2ray-core/releases\"\n  }, \"Github Releases\"), \" 页面下载最新的二进制包。\"), \"\\n\", React.createElement(_components.p, null, \"本文以通用于 x86_64 机器的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">v2ray-linux-64.zip</code>\"\n    }\n  }), \" 为例。下载完成后传入 Linux 主机即可。\"), \"\\n\", React.createElement(_components.h2, null, \"安装 Project-V\"), \"\\n\", React.createElement(_components.p, null, \"执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">unzip</code>\"\n    }\n  }), \" 命令：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">unzip</span> v2ray-linux-64.zip</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"文件将全部解压到当前目录。\"), \"\\n\", React.createElement(_components.h2, null, \"创建软链接\"), \"\\n\", React.createElement(_components.p, null, \"执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ln</code>\"\n    }\n  }), \" 命令：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">ln</span> <span class=\\\"token parameter variable\\\">-s</span> /path/to/v2ray /usr/local/bin</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"这里的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">v2ray</code>\"\n    }\n  }), \" 是压缩包里已编译好的二进制可执行文件。\"), \"\\n\", React.createElement(_components.h2, null, \"配置 Project-V\"), \"\\n\", React.createElement(_components.p, null, \"编辑与 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">v2ray</code>\"\n    }\n  }), \" 相同目录下的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">config.json</code>\"\n    }\n  }), \" 文件，配置如下：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// 前略</span>\\n  <span class=\\\"token comment\\\">// List of inbound proxy configurations.</span>\\n  <span class=\\\"token property\\\">\\\"inbounds\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// Port to listen on. You may need root access if the value is less than 1024.</span>\\n      <span class=\\\"token property\\\">\\\"port\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1080</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 本机监听的端口，应为不加双引号的数字</span>\\n\\n      <span class=\\\"token comment\\\">// IP address to listen on. Change to \\\"0.0.0.0\\\" to listen on all network interfaces.</span>\\n      <span class=\\\"token property\\\">\\\"listen\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"127.0.0.1\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// Tag of the inbound proxy. May be used for routing.</span>\\n      <span class=\\\"token property\\\">\\\"tag\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"socks-inbound\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// Protocol name of inbound proxy.</span>\\n      <span class=\\\"token property\\\">\\\"protocol\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"socks\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// Settings of the protocol. Varies based on protocol.</span>\\n      <span class=\\\"token property\\\">\\\"settings\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"auth\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"noauth\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"udp\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"ip\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"127.0.0.1\\\"</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// Enable sniffing on TCP connection.</span>\\n      <span class=\\\"token property\\\">\\\"sniffing\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"enabled\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token comment\\\">// Target domain will be overriden to the one carried by the connection, if the connection is HTTP or HTTPS.</span>\\n        <span class=\\\"token property\\\">\\\"destOverride\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"http\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"tls\\\"</span><span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// List of outbound proxy configurations.</span>\\n  <span class=\\\"token property\\\">\\\"outbounds\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// Protocol name of the outbound proxy.</span>\\n      <span class=\\\"token property\\\">\\\"protocol\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"vmess\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 使用的代理协议</span>\\n\\n      <span class=\\\"token comment\\\">// Settings of the protocol. Varies based on protocol.</span>\\n      <span class=\\\"token property\\\">\\\"settings\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"vnext\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token property\\\">\\\"address\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"V2RAY_SERVER_ADDRESS\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 代理的服务器地址</span>\\n            <span class=\\\"token property\\\">\\\"port\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">16823</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 代理服务器的端口，应为不加双引号的数字</span>\\n            <span class=\\\"token property\\\">\\\"users\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n              <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token property\\\">\\\"id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"V2RAY_UUID\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// 代理服务器的 UUID</span>\\n                <span class=\\\"token property\\\">\\\"alterId\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">64</span> <span class=\\\"token comment\\\">// 代理服务器的 Alter Id，应为不加双引号的数字</span>\\n              <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">]</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// 添加更多的 VMESS 协议代理服务器</span>\\n          <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token punctuation\\\">]</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n\\n      <span class=\\\"token comment\\\">// Tag of the outbound. May be used for routing.</span>\\n      <span class=\\\"token property\\\">\\\"tag\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"vmess_serve\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n  <span class=\\\"token comment\\\">// 后略</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"对于新手，只需要掌握 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">inbounds</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">outbounds</code>\"\n    }\n  }), \" 的配置方式即可。\"), \"\\n\", React.createElement(_components.p, null, \"对于进阶使用，可以参考\", React.createElement(_components.a, {\n    href: \"https://www.v2fly.org/\"\n  }, \"官方文档\"), \"，或者更适合新手的\", React.createElement(_components.a, {\n    href: \"https://guide.v2fly.org/\"\n  }, \"“白话文”文档\"), \"。\"), \"\\n\", React.createElement(_components.h2, null, \"启用 Project-V\"), \"\\n\", React.createElement(_components.p, null, \"保存修改后，在后台运行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">v2ray</code>\"\n    }\n  }), \"：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">v2ray <span class=\\\"token operator\\\">&amp;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"如果参考前面的默认配置，则它将监听在 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">127.0.0.1:1080</code>\"\n    }\n  }), \" 端口。\"), \"\\n\", React.createElement(_components.p, null, \"假如您想加速 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">git</code>\"\n    }\n  }), \" 克隆速度，则可以配置它的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">http(s).proxy</code>\"\n    }\n  }), \"：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">git</span> config <span class=\\\"token parameter variable\\\">--global</span> http.proxy socks5://127.0.0.1:1080\\n<span class=\\\"token function\\\">git</span> config <span class=\\\"token parameter variable\\\">--global</span> https.proxy socks5://127.0.0.1:1080</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"现在，使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">git clone</code>\"\n    }\n  }), \" 命令享受飞一般的速度吧。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/homepage/homepage/blog/posts/linux-project-v.mdx\";\nimport {Fancybox} from \"@fancyapps/ui\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\";\nimport Card from \"../components/card\";\nimport Category from \"../components/category\";\nimport SEO from \"../components/seo\";\nimport Tag from \"../components/tag\";\nconst FancyBoxImage = props => {\n  const {alt = \"The author is too lazy to give an alt\", src, ...restProps} = props;\n  return React.createElement(\"a\", {\n    href: src,\n    \"data-fancybox\": \"gallery\",\n    \"data-caption\": alt\n  }, React.createElement(\"img\", Object.assign({\n    src: src,\n    alt: alt\n  }, restProps)));\n};\nconst ALink = _ref => {\n  let {href = \"\", children} = _ref;\n  const isExternalHref = !(href !== null && href !== void 0 && href.startsWith(\"#\"));\n  const parsedHref = isExternalHref ? href : `#${encodeURIComponent(href.slice(1))}`;\n  return React.createElement(\"a\", {\n    href: parsedHref,\n    target: isExternalHref ? \"_blank\" : undefined,\n    rel: \"noreferrer\"\n  }, children);\n};\nconst components = {\n  a: ALink,\n  img: FancyBoxImage,\n  Card,\n  Link\n};\nconst PostTemplate = _ref2 => {\n  let {children, data} = _ref2;\n  const {mdx: {fields: {isDraft}, frontmatter: {title, date: dateString, updated: updatedDateString, categories, tags, timeliness}}} = data;\n  const articleRef = React.useRef(null);\n  const date = dayjs(dateString);\n  const updatedDate = updatedDateString ? dayjs(updatedDateString) : date;\n  const today = dayjs();\n  const diffDays = today.diff(updatedDate, \"days\");\n  React.useEffect(() => {\n    var _articleRef$current;\n    const optimizedImageLinks = (_articleRef$current = articleRef.current) === null || _articleRef$current === void 0 ? void 0 : _articleRef$current.querySelectorAll(\"a.gatsby-resp-image-link\");\n    optimizedImageLinks === null || optimizedImageLinks === void 0 ? void 0 : optimizedImageLinks.forEach(link => {\n      const image = link.children.item(1);\n      link.setAttribute(\"data-fancybox\", \"gallery\");\n      link.setAttribute(\"data-caption\", image.alt);\n    });\n    Fancybox.bind(\"[data-fancybox]\");\n    return () => Fancybox.unbind(\"[data-fancybox]\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mx-auto flex max-w-xl flex-col gap-y-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex flex-col gap-4\"\n  }, (categories === null || categories === void 0 ? void 0 : categories.length) && React.createElement(Category, {\n    name: categories[0],\n    className: \"item-selectable\"\n  }), React.createElement(\"h1\", {\n    className: \"text-3xl font-bold\"\n  }, title), React.createElement(\"div\", {\n    className: \"item-secondary flex flex-col gap-2 lg:flex-row\"\n  }, dateString && React.createElement(\"span\", {\n    title: `首次发布于：${date.toString()}\\n最后更新于：${updatedDate.toString()}`\n  }, date.format(\"MM 月 DD 日 YYYY 年\")), (tags === null || tags === void 0 ? void 0 : tags.length) && React.createElement(\"div\", {\n    className: \"flex flex-1 flex-wrap gap-2 lg:before:content-['\\u2022']\"\n  }, tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag,\n    className: \"item-secondary item-selectable\"\n  }))))), React.createElement(\"article\", {\n    ref: articleRef,\n    className: \"heti post-entry\"\n  }, isDraft && React.createElement(\"blockquote\", {\n    className: \"!border-red-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u672A\\u6B63\\u5F0F\\u53D1\\u5E03\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u5C1A\\u672A\\u64B0\\u5199\\u5B8C\\u5168\\u6216\\u5B58\\u5728\\u4E00\\u4E9B\\u7EB0\\u6F0F\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), timeliness !== false && diffDays > 365 && React.createElement(\"blockquote\", {\n    className: \"!border-orange-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u6700\\u540E\\u66F4\\u65B0\\u4E8E \", diffDays, \" \\u5929\\u524D\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u968F\\u7740\\u65F6\\u95F4\\u7684\\u63A8\\u79FB\\u800C\\u53D8\\u5F97\\u4E0D\\u518D\\u9002\\u7528\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\nconst query = \"2264136072\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: String(data.mdx.frontmatter.title)\n  });\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","a","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","isExternalHref","startsWith","parsedHref","encodeURIComponent","slice","target","undefined","rel","img","alt","src","restProps","Card","Link","PostTemplate","_ref2","data","mdx","fields","isDraft","frontmatter","title","date","dateString","updated","updatedDateString","categories","tags","timeliness","articleRef","dayjs","updatedDate","diffDays","diff","_articleRef$current","optimizedImageLinks","current","querySelectorAll","forEach","link","image","item","setAttribute","Fancybox","bind","unbind","className","length","Category","name","toString","format","map","tag","Tag","key","ref","MDXProvider","Head","_ref3","SEO","String","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}