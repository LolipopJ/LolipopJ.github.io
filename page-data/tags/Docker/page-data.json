{"componentChunkName":"component---src-templates-post-list-tsx","path":"/tags/Docker/","result":{"data":{"allMdx":{"nodes":[{"excerpt":"笔者今天在使用 Next Chat 聊天时，突然想到聊天数据应该是可以备份的，在设置里面发现它仅支持 WebDAV 和没听说过的 UpStash 两种文件协议，而笔者使用的其它软件又广泛支持前者进行备份同步。于是今天便来捣腾 WebDAV 服务并实现数据备份。 Docker 部署 WebDAV 服务\n\n一旦使用上了 Docker，就再也不想回去那种将服务运行在机器本体上的时代了。笔者首选使用…","fields":{"slug":"private-webdav"},"frontmatter":{"categories":["技术琐事"],"tags":["Docker","WebDAV"],"title":"部署自己的 WebDAV 服务，同步应用数据与软件配置","date":"2025-04-03T00:00:00.000Z","updated":"2025-04-03T00:00:00.000Z","timeliness":null}},{"excerpt":"去年笔者拿 N100 小型主机安装 OpenWRT 系统作主路由服务器，又塞进去一些笔者自己部署的应用服务。后来 Mac Mini 4 发售了，评测得到的功耗与性能令人惊叹，最重要的是定价很不苹果，让我这个苹果小黑子也想要入手一台玩玩。 当然，笔者在逛 V2EX 的时候也看了大量劝退购入 Mac Mini 4 的帖子，尤其是像笔者这样只是拿来做轻量级应用服务器的用途 —— 大炮打蚊子。但是你知道的…","fields":{"slug":"mac-mini-server"},"frontmatter":{"categories":["技术琐事"],"tags":["MacOS","Remote-Desktop","Docker","PostgreSQL","Minecraft"],"title":"拿刚买的 Mac Mini 做我的应用服务器","date":"2025-03-30T00:00:00.000Z","updated":"2025-03-31T00:00:00.000Z","timeliness":false}},{"excerpt":"现在，我已经安装了 Docker，并拉取了 Nginx 的镜像。除此之外，我也购买了域名，完成了备案，并且为域名配置了 SSL。一切准备就绪，那么我该怎么将我的静态网页项目在 Linux 主机上通过 Nginx 部署，最终实现域名访问呢？ 本文以部署我的个人博客页面为例，介绍如何使用基于 Docker 的 Nginx 部署静态网页项目。\n\n准备静态网页项目\n\n为了更方便管理网页项目…","fields":{"slug":"website-deployment-docker-nginx"},"frontmatter":{"categories":["技术琐事"],"tags":["Nginx","Docker","Linux"],"title":"使用基于 Docker 的 Nginx 部署静态网页项目","date":"2021-06-25T00:00:00.000Z","updated":"2021-06-25T00:00:00.000Z","timeliness":false}},{"excerpt":"本文适用于 C++ 版本 gRPC 的离线编译安装，但对于下载 gRPC 步骤强烈建议使用 git 进行。 如果在能直接连接外网的机器上编译，可直接按照 gRPC 官网文档的指引快速执行编译操作。\n\n安装基本依赖\n\n确保机器上包括这些基本依赖：, ,  与 C++ 编译环境。\n\ngRPC 的编译需要  版本在  及以上。假如版本低于此，应当在 Docker 容器中安装较新版本的 GCC 再执行编译操作…","fields":{"slug":"linux-docker-install-grpc"},"frontmatter":{"categories":["后端开发"],"tags":["Linux","CPP","gRPC","Docker"],"title":"Linux 系统编译安装基于 C++ 的 gRPC","date":"2021-04-22T00:00:00.000Z","updated":"2021-05-11T00:00:00.000Z","timeliness":null}},{"excerpt":"如果软件源可用，可以使用 CentOS 的 yum 包管理器或 Ubuntu 的 apt 包管理器等一键安装 GCC，例如： 本文适用于系统中包含有其它版本的 GCC 编译器情况下，手动更新或降级 GCC 编译器。编译 GCC 的过程十分耗时，如果能使用包管理器尽量还是使用包管理器吧。\n\nNOTE: 如果仅使用 GCC 进行编译操作或不确定当前系统能否兼容新版本的 GCC，建议在 Docker…","fields":{"slug":"linux-docker-gcc-update"},"frontmatter":{"categories":["后端开发"],"tags":["Linux","GCC","Docker"],"title":"Linux 容器更新或降级 GCC 版本","date":"2021-04-20T00:00:00.000Z","updated":"2021-04-20T00:00:00.000Z","timeliness":null}}]}},"pageContext":{"ids":["71841a5c-2181-568e-9734-6f9d076b3783","e8eeaebb-f84f-5604-a458-6a8e3ed352da","e843739f-6238-5214-90d0-bb0a5198c197","b1343f39-4753-579e-aaec-e6bb73994109","ceb029e9-ef23-513b-900a-fd2b0419deaf"],"tag":"Docker"}},"staticQueryHashes":["4278130389","51765410"],"slicesMap":{}}