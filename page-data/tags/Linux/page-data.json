{"componentChunkName":"component---src-templates-post-list-tsx","path":"/tags/Linux/","result":{"pageContext":{"posts":[{"excerpt":"笔者在今年五月份部署了一个与朋友同玩共乐的 Minecraft 服务器，稳定运行至今。忽然想记录为一篇博客，分享分享折腾的经历。 笔者结合个人喜好（最新版本，模组优先）和大众推荐（Fabric 更适合新版本 Minecraft），决定基于 Fabric 搭建一个可以添加模组的 Minecraft 服务器。此类服务器简称为模组服务器，还有基于 Paper, Spigot 等搭建的插件服务器…","frontmatter":{"categories":["技术琐事"],"tags":["Linux","Game-Server","Minecraft"],"title":"部署一个给朋友使用的 Minecraft 模组服务器","date":"2024-07-05T00:00:00.000Z","updated":"2024-07-13T00:00:00.000Z","timeliness":null},"id":"d844cb72-3f6e-58d8-bf2e-8fdbf54393d2","internal":{"contentDigest":"d52ea0e420add99393b970c14bb77214","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/run-mc-server.mdx"},"slug":"run-mc-server"},{"excerpt":"本文重现了笔者在自己的 CentOS 7 (64-bit) 系统中部署饥荒联机版服务器的全过程，供君参考。 Steam 版的饥荒联机版与 Wegame 版数据不互通，也无法相互联机。\n\n笔者主要参考了如下两个部署教程：\n\nGuides/Don’t Starve Together Dedicated Servers How to setup dedicated server with cave on…","frontmatter":{"categories":["技术琐事"],"tags":["Linux","SteamCMD","Game-Server","Don't-Starve"],"title":"基于 SteamCMD 部署一个给朋友使用的饥荒联机版服务器","date":"2024-07-02T00:00:00.000Z","updated":"2024-07-18T00:00:00.000Z","timeliness":null},"id":"613b275a-d63e-503e-9e98-2023414aec49","internal":{"contentDigest":"2c762930570eb1d3e4d5203022318760","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/run-dont-starve-server.mdx"},"slug":"run-dont-starve-server"},{"excerpt":"这些天在阿里云的 ECS 服务器上捣鼓自己的东西，通过 Nginx 转发请求，允许以域名的方式访问到笔者开设的不同站点、服务。 笔者撰写本篇文章，晒晒在服务器上都做了哪些工作，也希望能为您提供一些启发。\n\n安装最新版本的 Nginx\n\n笔者使用的服务器为 CentOS 7 系统，默认的 yum 源中包含的 Nginx 版本为 （2021-05-21）。\n\n更新 yum 源，添加 Nginx 的官方源：…","frontmatter":{"categories":["技术琐事"],"tags":["Nginx","Linux"],"title":"使用 Nginx 治理我的服务","date":"2024-05-13T00:00:00.000Z","updated":"2024-07-17T00:00:00.000Z","timeliness":false},"id":"62d65674-689a-5480-ab8d-1392ce9028bb","internal":{"contentDigest":"c968bc615aa2051a8eb5c2ad0f6f93f8","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/nginx-services.mdx"},"slug":"nginx-services"},{"excerpt":"笔者最近在 OpenWRT 软路由上部署了一个 Minecraft 服务器，出于对数据安全的焦虑，于是折腾了一下存档备份的相关事宜，记录为此文。 在 CurseForge 等模组站上已有方便好用的 Minecraft 服务器存档备份插件，除非您喜欢折腾或高自由度的定制，不用像笔者这样编写一整个脚本。\n\n完整的脚本可见此。\n\n编写备份脚本\n前置准备\n\n为了脚本编写方便，约定应该在 Minecraft…","frontmatter":{"categories":["后端开发"],"tags":["Linux","OpenWRT","Minecraft","Node","JavaScript","Alist"],"title":"基于原生 Node 备份软路由上的 Minecraft 服务器存档，并通过 Alist 上传到云端","date":"2024-05-11T00:00:00.000Z","updated":"2024-05-23T00:00:00.000Z","timeliness":false},"id":"c9e1e460-ce99-56b4-a3a4-fd7b1c2652ed","internal":{"contentDigest":"f0ffaa363834fb6f6c66ea8fcf820b1d","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/backup-mc-server.mdx"},"slug":"backup-mc-server"},{"excerpt":"现在，我已经安装了 Docker，并拉取了 Nginx 的镜像。除此之外，我也购买了域名，完成了备案，并且为域名配置了 SSL。一切准备就绪，那么我该怎么将我的静态网页项目在 Linux 主机上通过 Nginx 部署，最终实现域名访问呢？ 本文以部署我的个人博客页面为例，介绍如何使用基于 Docker 的 Nginx 部署静态网页项目。\n\n准备静态网页项目\n\n为了更方便管理网页项目…","frontmatter":{"categories":["技术琐事"],"tags":["Nginx","Docker","Linux"],"title":"使用基于 Docker 的 Nginx 部署静态网页项目","date":"2021-06-25T00:00:00.000Z","updated":"2021-06-25T00:00:00.000Z","timeliness":false},"id":"e843739f-6238-5214-90d0-bb0a5198c197","internal":{"contentDigest":"1acb7e46715fbe45acbb04cf5511c801","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/website-deployment-docker-nginx.mdx"},"slug":"website-deployment-docker-nginx"},{"excerpt":"下载 Release 在 Project-V 的 Github Releases 页面下载最新的二进制包。\n\n本文以通用于 x86_64 机器的  为例。下载完成后传入 Linux 主机即可。\n\n安装 Project-V\n\n执行  命令：\n\n文件将全部解压到当前目录。\n\n创建软链接\n\n执行  命令：\n\n这里的  是压缩包里已编译好的二进制可执行文件。\n\n配置 Project-V\n\n编辑与  相同目录下的  文件…","frontmatter":{"categories":["后端开发"],"tags":["Linux"],"title":"在 Linux 系统下启用 Project-V","date":"2021-06-09T00:00:00.000Z","updated":"2021-06-09T00:00:00.000Z","timeliness":null},"id":"fc893055-ed12-5175-95fa-596cb36121e0","internal":{"contentDigest":"b63df02253f9620042be17d6d7b82191","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/linux-project-v.mdx"},"slug":"linux-project-v"},{"excerpt":"查看系统 OS 及架构 以 Euler 系统为例，在终端上输入命令查看，可以通过  命令找到 rpm 包，再通过  查看系统 OS 及架构信息：\n\n当然，也可以使用通用的  命令。\n\n当前系统为 Euler 2.0 (SP5)，处理器架构为 x86_64。\n\n下载 MySQL\n\nEuler 2.0 系统基于 CentOS 7 开发，而 CentOS 7 由 Red Hat Enterprise…","frontmatter":{"categories":["后端开发"],"tags":["Linux","MySQL"],"title":"在 Euler 系统上离线安装 MySQL 5.7","date":"2021-06-04T00:00:00.000Z","updated":"2021-07-29T00:00:00.000Z","timeliness":null},"id":"6fe74f1b-3569-56e9-a5fe-81ee7030d276","internal":{"contentDigest":"2364562126cdc9cfde9fca6514ffef0b","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/euler-install-mysql.mdx"},"slug":"euler-install-mysql"},{"excerpt":"本文适用于 C++ 版本 gRPC 的离线编译安装，但对于下载 gRPC 步骤强烈建议使用 git 进行。 如果在能直接连接外网的机器上编译，可直接按照 gRPC 官网文档的指引快速执行编译操作。\n\n安装基本依赖\n\n确保机器上包括这些基本依赖：, ,  与 C++ 编译环境。\n\ngRPC 的编译需要  版本在  及以上。假如版本低于此，应当在 Docker 容器中安装较新版本的 GCC 再执行编译操作…","frontmatter":{"categories":["后端开发"],"tags":["Linux","CPP","gRPC","Docker"],"title":"Linux 系统编译安装基于 C++ 的 gRPC","date":"2021-04-22T00:00:00.000Z","updated":"2021-05-11T00:00:00.000Z","timeliness":null},"id":"b1343f39-4753-579e-aaec-e6bb73994109","internal":{"contentDigest":"498ac0c93f4fb62356e7b533137e685c","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/linux-docker-install-grpc.mdx"},"slug":"linux-docker-install-grpc"},{"excerpt":"如果软件源可用，可以使用 CentOS 的 yum 包管理器或 Ubuntu 的 apt 包管理器等一键安装 GCC，例如： 本文适用于系统中包含有其它版本的 GCC 编译器情况下，手动更新或降级 GCC 编译器。编译 GCC 的过程十分耗时，如果能使用包管理器尽量还是使用包管理器吧。\n\nNOTE: 如果仅使用 GCC 进行编译操作或不确定当前系统能否兼容新版本的 GCC，建议在 Docker…","frontmatter":{"categories":["后端开发"],"tags":["Linux","GCC","Docker"],"title":"Linux 容器更新或降级 GCC 版本","date":"2021-04-20T00:00:00.000Z","updated":"2021-04-20T00:00:00.000Z","timeliness":null},"id":"ceb029e9-ef23-513b-900a-fd2b0419deaf","internal":{"contentDigest":"9cb6dcb67046fcd59d70d32cd10538a8","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/linux-docker-gcc-update.mdx"},"slug":"linux-docker-gcc-update"},{"excerpt":"问题描述 在 CentOS 环境下执行  和  命令时都出现提示警告，节选内容如下所示：\n\n错误分析\n\n进入到对应目录下查找可以发现，这里的  与  实际上是相同的动态库文件，而非我们期望的符号链接和动态库文件。\n\n这个错误的产生原因是， 在正常情况下应该是一个指向  文件的软链接，但却变成了一个动态库文件。\n\n在一般情况下，这个错误并不会导致严重的问题；但假如目录下有多个不同版本的动态库文件…","frontmatter":{"categories":["技术琐事"],"tags":["Linux"],"title":"提示 *** is not a symbolic link 解决方案","date":"2021-03-10T00:00:00.000Z","updated":"2021-03-10T00:00:00.000Z","timeliness":false},"id":"a38f54a7-c095-5f5e-9514-f5899c3ae1ee","internal":{"contentDigest":"fdff85efc25c3233d7568cb02bd467f8","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/xxx-is-not-a-symbolic-link.mdx"},"slug":"xxx-is-not-a-symbolic-link"}],"tag":"Linux"}},"staticQueryHashes":["1770348878","4278130389"],"slicesMap":{}}