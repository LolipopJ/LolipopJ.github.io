{"componentChunkName":"component---src-templates-post-list-tsx","path":"/tags/Nuxt/","result":{"pageContext":{"posts":[{"excerpt":"在前端性能优化中存在一个老生常谈的问题：如何优化高频率执行的 JS 代码？例如： 我们为浏览器滚动 scroll 绑定了监听事件，当滚动到某位置之下后，会在浏览器右下方显示一个点击后能快速回到页面顶部的浮动按钮；而滚动回该位置之上时，浮动按钮消失。现在我们发现，用户每次使用滚轮滑动页面，都会触发很多次该事件，判断当前在该位置之上还是之下，这在一定程度上降低了前端的性能。 我们为网页添加了搜索功能…","frontmatter":{"categories":["前端开发"],"tags":["JavaScript","Vue-2","Nuxt"],"title":"函数防抖和节流，以及在 Vue 中的运用","date":"2021-05-08T00:00:00.000Z","updated":"2021-05-08T00:00:00.000Z","timeliness":false},"id":"f347e133-3dba-5229-ade0-f4669362b811","internal":{"contentDigest":"fdc08e07593af69e771466a4ab5da553","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/js-debounce-throttle.mdx"},"slug":"js-debounce-throttle"},{"excerpt":"迷途知反！腾讯地图的 JS API 文档实在过于简陋，且库很久没有更新，转身投入高德地图的怀抱，享受 this moment 的美好！ 高德地图与腾讯地图定位功能区别\n\n高德地图将定位功能和逆地理编码功能分开为两个操作，而腾讯地图将二者合并。\n\n这意味着使用高德地图实现逆地理编码，首先需要执行定位操作，再将得到的结果传给逆地理编码插件获得最后的结果。\n\n此外…","frontmatter":{"categories":["前端开发"],"tags":["JavaScript","Node","Vue-2","Nuxt","Promise"],"title":"在 Nuxt.js 中引入高德地图并实现定位及逆地理编码","date":"2021-03-17T00:00:00.000Z","updated":"2021-03-18T00:00:00.000Z","timeliness":null},"id":"10034809-1948-5171-b8cd-d2aa98c7d1f8","internal":{"contentDigest":"9c3f50fef8e7e0f58483829d564385ac","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/amap-import-vue.mdx"},"slug":"amap-import-vue"},{"excerpt":"正在开发的 Web 项目需要获取使用者的位置信息，而使用者主要通过移动端访问此 Web 服务。位置信息需要精确到区。在腾讯位置服务的定位解决方案里想要搜索可用的 JavaScript 库，只看到了服务端的 IP 定位和移动端的几个 SDK 包，甚异之。 终于在不起眼的地方找到了前端定位组件，适用于浏览器进行定位操作。\n\n本文基于 Nuxt.js 实现前端定位功能。\n\n它能做什么\n\n组件旨在优化纯 HTM…","frontmatter":{"categories":["前端开发"],"tags":["JavaScript","Node","Vue-2","Nuxt"],"title":"使用腾讯位置服务进行 Web 前端定位","date":"2021-03-16T00:00:00.000Z","updated":"2021-03-16T00:00:00.000Z","timeliness":null},"id":"086dac5d-4f33-570b-a1cc-35148d744ed7","internal":{"contentDigest":"9f66804a42fb2622564a92d1016a37fa","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/tencent-map-api-get-current-location.mdx"},"slug":"tencent-map-api-get-current-location"},{"excerpt":"哪位代码人不希望自己的代码总有统一优美的风格，不会因为合作开发项目而杂乱呢？ 在最开始写项目代码的时候我就用起了 ESLint 和 Prettier，再装一堆预设的配置，便跑了起来。令人沮丧的是，用 ESLint 修复了代码质量问题，还是会在编译器里看到红色波浪线，提醒还有些代码风格需要修复。直到这一次，我才忽然意识到 ESLint 和 Prettier 其实分工了不同领域，协同使用体验极好。\n\n本…","frontmatter":{"categories":["前端开发"],"tags":["Node","Nuxt","ESLint","Prettier","VSCode"],"title":"Nuxt 项目配置 ESLint 和 Prettier 检查并规范代码质量与格式","date":"2021-03-03T00:00:00.000Z","updated":"2021-08-07T00:00:00.000Z","timeliness":false},"id":"c748aa72-8932-50ed-8e4e-8d2bedaa4025","internal":{"contentDigest":"91c042c627129370c3a1d465f14cb97b","contentFilePath":"/home/runner/work/homepage/homepage/blog/posts/nodejs-eslint-prettier.mdx"},"slug":"nodejs-eslint-prettier"}],"tag":"Nuxt"}},"staticQueryHashes":["1770348878","4278130389"],"slicesMap":{}}