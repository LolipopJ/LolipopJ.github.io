{"componentChunkName":"component---src-templates-post-list-tsx","path":"/tags/JavaScript/","result":{"data":{"allMdx":{"nodes":[{"excerpt":"笔者最近在 OpenWRT 软路由上部署了一个 Minecraft 服务器，出于对数据安全的焦虑，于是折腾了一下存档备份的相关事宜，记录为此文。 在 CurseForge 等模组站上已有方便好用的 Minecraft 服务器存档备份插件，除非您喜欢折腾或高自由度的定制，不用像笔者这样编写一整个脚本。\n\n完整的脚本可见此。\n\n编写备份脚本\n前置准备\n\n为了脚本编写方便，约定应该在 Minecraft…","fields":{"slug":"backup-mc-server"},"frontmatter":{"banner":null,"categories":["后端开发"],"tags":["Linux","OpenWRT","Minecraft","Node","JavaScript","Alist"],"title":"基于原生 Node 备份软路由上的 Minecraft 服务器存档，并通过 Alist 上传到云端","date":"2024-05-11T00:00:00.000Z","updated":"2024-05-23T00:00:00.000Z","timeliness":false}},{"excerpt":"类（Class）是用于创建对象的模板，他们用代码封装数据以处理该数据，是面向对象编程方法的重要特性之一。JavaScript 中的  语法在 ES6 中引入，其底层实现基于原型（Prototype），系原型继承的语法糖（Syntactic Sugar）。 本博文将探讨 JavaScript 中如何使用类的相关知识，文章组织架构和内容基于 MDN 上关于类的章节。\n\n定义类\n\n类可以被看作一种…","fields":{"slug":"js-use-class"},"frontmatter":{"banner":null,"categories":["技术琐事"],"tags":["JavaScript","ES6"],"title":"漫谈 JavaScript 类（Class）的使用","date":"2021-05-20T00:00:00.000Z","updated":"2024-08-14T00:00:00.000Z","timeliness":null}},{"excerpt":"JavaScript 中有一个叫作闭包（Closure）的概念，非常有趣且适用，值得学习并整理为一篇博客。 为了更好理解闭包的作用，不妨看看我的关于 JS 变量提升（Hoisting）和函数提升现象的阐述。\n\n作用域\n\n在 JavaScript 中，作用域（Scope）是当前代码执行的上下文，也即是值和表达式在其中可访问到的上下文。\n\n如果一个变量或其它表达式不在当前作用域中，就会沿作用域链…","fields":{"slug":"js-closure"},"frontmatter":{"banner":null,"categories":["技术琐事"],"tags":["JavaScript"],"title":"漫谈 JavaScript 闭包","date":"2021-05-18T00:00:00.000Z","updated":"2021-05-18T00:00:00.000Z","timeliness":false}},{"excerpt":"在 ES6 规范出现之前，使用 JavaScript 声明变量只有 ,  以及隐式声明三种方式。 按照一般编程的思维，我们会通过“先声明，后调用”的方式去使用变量，例如：\n\n但假如反过来，我们“先调用，后声明”，会发生什么呢？\n\n如上所示，在声明变量  之前尝试将它的值打印出来，控制台输出的结果是 ，而不是预期中的报错 。这就是变量提升。\n\n而对于函数的声明与使用，也出现了相似的情况：\n\n在声明函数…","fields":{"slug":"js-hoisting"},"frontmatter":{"banner":null,"categories":["技术琐事"],"tags":["JavaScript"],"title":"漫谈 JavaScript 变量提升和函数提升","date":"2021-05-11T00:00:00.000Z","updated":"2022-10-21T00:00:00.000Z","timeliness":false}},{"excerpt":"在前端性能优化中存在一个老生常谈的问题：如何优化高频率执行的 JS 代码？例如： 我们为浏览器滚动 scroll 绑定了监听事件，当滚动到某位置之下后，会在浏览器右下方显示一个点击后能快速回到页面顶部的浮动按钮；而滚动回该位置之上时，浮动按钮消失。现在我们发现，用户每次使用滚轮滑动页面，都会触发很多次该事件，判断当前在该位置之上还是之下，这在一定程度上降低了前端的性能。 我们为网页添加了搜索功能…","fields":{"slug":"js-debounce-throttle"},"frontmatter":{"banner":null,"categories":["前端开发"],"tags":["JavaScript","Vue-2","Nuxt"],"title":"函数防抖和节流，以及在 Vue 中的运用","date":"2021-05-08T00:00:00.000Z","updated":"2021-05-08T00:00:00.000Z","timeliness":false}},{"excerpt":"迷途知反！腾讯地图的 JS API 文档实在过于简陋，且库很久没有更新，转身投入高德地图的怀抱，享受 this moment 的美好！ 高德地图与腾讯地图定位功能区别\n\n高德地图将定位功能和逆地理编码功能分开为两个操作，而腾讯地图将二者合并。\n\n这意味着使用高德地图实现逆地理编码，首先需要执行定位操作，再将得到的结果传给逆地理编码插件获得最后的结果。\n\n此外…","fields":{"slug":"amap-import-vue"},"frontmatter":{"banner":{"publicURL":"/static/bbf49aa1920c4c954ef7915ac5b75f79/banner.png"},"categories":["前端开发"],"tags":["JavaScript","Node","Vue-2","Nuxt","Promise"],"title":"在 Nuxt.js 中引入高德地图并实现定位及逆地理编码","date":"2021-03-17T00:00:00.000Z","updated":"2021-03-18T00:00:00.000Z","timeliness":null}},{"excerpt":"正在开发的 Web 项目需要获取使用者的位置信息，而使用者主要通过移动端访问此 Web 服务。位置信息需要精确到区。在腾讯位置服务的定位解决方案里想要搜索可用的 JavaScript 库，只看到了服务端的 IP 定位和移动端的几个 SDK 包，甚异之。 终于在不起眼的地方找到了前端定位组件，适用于浏览器进行定位操作。\n\n本文基于 Nuxt.js 实现前端定位功能。\n\n它能做什么\n\n组件旨在优化纯 HTM…","fields":{"slug":"tencent-map-api-get-current-location"},"frontmatter":{"banner":null,"categories":["前端开发"],"tags":["JavaScript","Node","Vue-2","Nuxt"],"title":"使用腾讯位置服务进行 Web 前端定位","date":"2021-03-16T00:00:00.000Z","updated":"2021-03-16T00:00:00.000Z","timeliness":null}},{"excerpt":"在开发 NetUnion 的官网页面时，有这样一个需求：读取本地目录下的新闻和博客文件，并在前端渲染，其中文件均为 Markdown 格式。 与全栈开发直接调用后端数据库不同的是，没有数据表字段来记录文件的不同属性，例如文件的题目、作者、撰写日期等，因此这些属性需要记录在 .md 文件当中。\n\n这样的撰写方式是不是很熟悉？没错，不就是我正在写的 Hexo 博客中 .md 文件的编写格式嘛！\n\n自动导入…","fields":{"slug":"write-md-parser"},"frontmatter":{"banner":null,"categories":["前端开发"],"tags":["Markdown","JavaScript","Node","Webpack"],"title":"Webpack 读取本地 Markdown 文件并进行预处理","date":"2021-02-23T00:00:00.000Z","updated":"2021-06-26T00:00:00.000Z","timeliness":null}}]}},"pageContext":{"ids":["c9e1e460-ce99-56b4-a3a4-fd7b1c2652ed","741ed0fd-642e-503b-a356-95a2bf18366a","d44011e3-8f56-53cd-8c6d-266e0151f893","264a7d91-7651-5be7-890d-8dbdbecb24c9","f347e133-3dba-5229-ade0-f4669362b811","10034809-1948-5171-b8cd-d2aa98c7d1f8","086dac5d-4f33-570b-a1cc-35148d744ed7","37fa9a4a-1789-5893-bb40-c431546078fd"],"tag":"JavaScript"}},"staticQueryHashes":["267559364","4278130389"],"slicesMap":{}}