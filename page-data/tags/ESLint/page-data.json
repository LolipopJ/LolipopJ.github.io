{"componentChunkName":"component---src-templates-post-list-tsx","path":"/tags/ESLint/","result":{"data":{"allMdx":{"nodes":[{"excerpt":"哪位代码人不希望自己的代码总有统一优美的风格，不会因为合作开发项目而杂乱呢？ 在最开始写项目代码的时候我就用起了 ESLint 和 Prettier，再装一堆预设的配置，便跑了起来。令人沮丧的是，用 ESLint 修复了代码质量问题，还是会在编译器里看到红色波浪线，提醒还有些代码风格需要修复。直到这一次，我才忽然意识到 ESLint 和 Prettier 其实分工了不同领域，协同使用体验极好。\n\n本…","fields":{"slug":"nodejs-eslint-prettier"},"frontmatter":{"banner":null,"categories":["前端开发"],"tags":["ESLint","Prettier","VSCode"],"title":"前端工程配置 ESLint 和 Prettier 检查并规范代码质量与格式","date":"2021-03-03T00:00:00.000Z","updated":"2025-04-11T00:00:00.000Z","timeliness":null}}]}},"pageContext":{"ids":["c748aa72-8932-50ed-8e4e-8d2bedaa4025"],"tag":"ESLint"}},"staticQueryHashes":["3858298124","4278130389"],"slicesMap":{}}