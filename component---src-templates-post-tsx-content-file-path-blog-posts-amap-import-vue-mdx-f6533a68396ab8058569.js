"use strict";(self.webpackChunkhomepage=self.webpackChunkhomepage||[]).push([[1973],{4502:function(n,s,a){a.r(s),a.d(s,{Head:function(){return f},default:function(){return h}});var t=a(8453),p=a(6540);function e(n){const s=Object.assign({p:"p",h2:"h2",span:"span",ul:"ul",li:"li",a:"a"},(0,t.R)(),n.components),{Link:a}=s;return a||function(n,s){throw new Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Link",!0),p.createElement(p.Fragment,null,p.createElement(s.p,null,"迷途知反！腾讯地图的 JS API 文档实在过于简陋，且库很久没有更新，转身投入高德地图的怀抱，享受 this moment 的美好！"),"\n",p.createElement(s.h2,null,"高德地图与腾讯地图定位功能区别"),"\n",p.createElement(s.p,null,"高德地图将定位功能和逆地理编码功能分开为两个操作，而腾讯地图将二者合并。"),"\n",p.createElement(s.p,null,"这意味着使用高德地图实现逆地理编码，首先需要执行定位操作，再将得到的结果传给逆地理编码插件获得最后的结果。"),"\n",p.createElement(s.p,null,"此外，高德地图的逆地理编码无法解析中国以外的地理坐标，只能解析中国境内省市区等地理坐标。"),"\n",p.createElement(s.h2,null,"引入高德地图 JS API 库"),"\n",p.createElement(s.p,null,"这里我们通过顺序同步加载的方式引入第三方库。"),"\n",p.createElement(s.p,null,"编辑 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">nuxt.config.js</code>'}})," 中 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">head</code>'}})," 项以引入 JS API 库。"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// nuxt.config.js</span>\n<span class="token literal-property property">script</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'text/javascript\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// 引入高德地图 JavaScript API：https://developer.amap.com/api/jsapi-v2/guide/abc/load</span>\n    <span class="token comment">// YOUR-APP-KEY 即高德位置服务应用的 key</span>\n    <span class="token comment">// AMap.Geolocation 为定位插件</span>\n    <span class="token comment">// AMap.Geocoder 为逆地理编码插件</span>\n    <span class="token literal-property property">src</span><span class="token operator">:</span>\n      <span class="token string">\'https://webapi.amap.com/maps?v=2.0&amp;key=YOUR-APP-KEY&amp;plugin=AMap.Geolocation,AMap.Geocoder\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"如果获取脚本失败，请关闭浏览器中拦截广告的插件等。"),"\n",p.createElement(s.p,null,"此外要注意："),"\n",p.createElement(s.ul,null,"\n",p.createElement(s.li,null,"为避免地图数据协议和前端资源不匹配导致页面运行报错，只允许在线加载 JS API，禁止进行本地转存、与其它代码混合打包等用法。——",p.createElement(s.a,{href:"https://developer.amap.com/api/javascript-api/guide/abc/load"},"JS API 的加载")),"\n",p.createElement(s.li,null,"由于 Chrome、IOS10 等已不再支持非安全域的浏览器定位请求，为保证定位成功率和精度，请尽快升级您的站点到 HTTPS。——",p.createElement(s.a,{href:"https://developer.amap.com/api/javascript-api/reference/location"},"AMap.Geolocation 插件")),"\n"),"\n",p.createElement(s.h2,null,"高德地图定位功能实现"),"\n",p.createElement(s.p,null,"现在已经引入了需要的库及插件 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">AMap.Geolocation</code>'}}),"，首先要构建一个浏览器定位实例 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">geolocation</code>'}}),"："),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// 仅进行定位，不与地图交互</span>\n<span class="token keyword">const</span> geolocation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Geolocation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token comment">// 超过 10 秒后停止定位</span>\n  <span class="token literal-property property">noIpLocate</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止移动端使用 IP 定位</span>\n  <span class="token literal-property property">useNative</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 使用安卓定位 sdk 用来进行定位</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"更多的构造选项可参考 ",p.createElement(s.a,{href:"https://developer.amap.com/api/javascript-api/reference/location"},"AMap.Geolocation 插件官方文档"),"。"),"\n",p.createElement(s.p,null,"对于定位方法 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">getCurrentPosition(callback:function(status,result){})</code>'}}),"，可以用 callback 的方式或事件监听的方式实现取得返回值。以 callback 的方式为例，可编写："),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js">geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">status<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">"complete"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 定位成功</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 定位失败</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"为了封装函数，无法在回调函数里添加 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">return</code>'}})," 进行返回，因此选择使用 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Promise</code>'}})," 的方法："),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">status<span class="token punctuation">,</span> positionResult</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">"complete"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 定位成功</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"获取地理位置成功"</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">result</span><span class="token operator">:</span> positionResult<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 定位失败</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">获取地理位置失败：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>positionResult<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"接下来只需要进行标准的 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">then()</code>'}})," 或 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">catch()</code>'}})," 处理就可以了："),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(s.h2,null,"高德地图逆地理编码功能实现"),"\n",p.createElement(s.p,null,p.createElement(s.a,{href:"https://developer.amap.com/api/javascript-api/reference/lnglat-to-address"},"高德地图逆地理编码"),"由 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">AMap.Geocoder</code>'}})," 插件实现，我们也已经引入。"),"\n",p.createElement(s.p,null,"因此只需要将上一步得到的地理经纬度坐标信息作为参数传入即可："),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">getCurrentAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// 调用定位方法</span>\n    <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">positionResult</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token comment">// 定位成功</span>\n        <span class="token comment">// 获得经纬度坐标数组，元素顺序不可变</span>\n        <span class="token keyword">const</span> lnglat <span class="token operator">=</span> <span class="token punctuation">[</span>\n          positionResult<span class="token punctuation">.</span>result<span class="token punctuation">.</span>position<span class="token punctuation">.</span>lng<span class="token punctuation">,</span>\n          positionResult<span class="token punctuation">.</span>result<span class="token punctuation">.</span>position<span class="token punctuation">.</span>lat<span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token comment">// 构造地理编码或逆地理编码功能实例</span>\n        <span class="token keyword">const</span> geocoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Geocoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// 获得逆编码信息</span>\n        geocoder<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span>lnglat<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">addressStatus<span class="token punctuation">,</span> addressResult</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>addressStatus <span class="token operator">===</span> <span class="token string">"complete"</span> <span class="token operator">&amp;&amp;</span> addressResult<span class="token punctuation">.</span>regeocode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 获取成功</span>\n            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"获取地理位置和地区信息成功"</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">positionResult</span><span class="token operator">:</span> positionResult<span class="token punctuation">.</span>result<span class="token punctuation">,</span> addressResult <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 获取失败</span>\n            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"获取地理位置成功，但获取地区信息失败"</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">positionResult</span><span class="token operator">:</span> positionResult<span class="token punctuation">.</span>result <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token comment">// 定位失败</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"调用方式同上所述，不再赘述。可以添加对 ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">status</code>'}})," 的判断验证结果并进行相应处理。"),"\n",p.createElement(s.h2,null,"完整源码"),"\n",p.createElement(s.p,null,"编写封装的基于 Nuxt.js + Promise 实现高德地图定位及逆地理编码的代码如下所示："),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// plugins/amapGeolocation.js</span>\n<span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> geolocation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Geolocation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span> <span class="token comment">// 超过 10 秒后停止定位</span>\n  <span class="token literal-property property">noIpLocate</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 禁止移动端使用 IP 定位</span>\n  <span class="token literal-property property">useNative</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 使用安卓定位 sdk 用来进行定位</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/**\n * 获取当前的经纬度坐标\n * https://developer.amap.com/api/javascript-api/reference/location\n */</span>\n<span class="token keyword">function</span> <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">status<span class="token punctuation">,</span> positionResult</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">"complete"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 定位成功</span>\n        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n          <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"获取地理位置成功"</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">result</span><span class="token operator">:</span> positionResult<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 定位失败</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">获取地理位置失败：</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>positionResult<span class="token punctuation">.</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">/**\n * 获取当前地理坐标的逆编码结果\n * https://developer.amap.com/api/javascript-api/reference/lnglat-to-address\n */</span>\n<span class="token keyword">function</span> <span class="token function">getCurrentAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">positionResult</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> lnglat <span class="token operator">=</span> <span class="token punctuation">[</span>\n          positionResult<span class="token punctuation">.</span>result<span class="token punctuation">.</span>position<span class="token punctuation">.</span>lng<span class="token punctuation">,</span>\n          positionResult<span class="token punctuation">.</span>result<span class="token punctuation">.</span>position<span class="token punctuation">.</span>lat<span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> geocoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Geocoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        geocoder<span class="token punctuation">.</span><span class="token function">getAddress</span><span class="token punctuation">(</span>lnglat<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">addressStatus<span class="token punctuation">,</span> addressResult</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>addressStatus <span class="token operator">===</span> <span class="token string">"complete"</span> <span class="token operator">&amp;&amp;</span> addressResult<span class="token punctuation">.</span>regeocode<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 逆编码成功</span>\n            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"获取地理位置和地区信息成功"</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">positionResult</span><span class="token operator">:</span> positionResult<span class="token punctuation">.</span>result<span class="token punctuation">,</span> addressResult <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token comment">// 逆编码失败</span>\n            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">msg</span><span class="token operator">:</span> <span class="token string">"获取地理位置成功，但获取地区信息失败"</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">result</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">positionResult</span><span class="token operator">:</span> positionResult<span class="token punctuation">.</span>result <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token comment">// 定位失败</span>\n        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> amapGeolocation <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$Geolocation <span class="token operator">=</span> <span class="token punctuation">{</span>\n      getCurrentPosition<span class="token punctuation">,</span>\n      getCurrentAddress<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>amapGeolocation<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"将此文件作为插件引入 Nuxt.js 后，可以在 Vue 文件中通过如下代码轻松调用："),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// .vue</span>\n<span class="token comment">// 仅获取地理坐标</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Geolocation\n  <span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 获取地理坐标及所在地址</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>$Geolocation\n  <span class="token punctuation">.</span><span class="token function">getCurrentAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",p.createElement(s.h2,null,"相关链接"),"\n",p.createElement(s.ul,null,"\n",p.createElement(s.li,null,"\n",p.createElement(a,{to:"/posts/tencent-map-api-get-current-location"},p.createElement(s.p,null,"使用腾讯位置服务进行 Web 前端定位")),"\n"),"\n"))}var o=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.R)(),n.components);return s?p.createElement(s,n,p.createElement(e,n)):e(n)};var c=a(197),l=a(4353),u=a.n(l),r=a(4810),i=a(6947),k=a(4017),m=a(1042),g=a(1038);const d={a:n=>{let{href:s="",children:a}=n;const t=!(null!=s&&s.startsWith("#")),e=t?s:`#${encodeURIComponent(s.slice(1))}`;return p.createElement("a",{href:e,target:t?"_blank":void 0,rel:"noreferrer"},a)},img:n=>{const{alt:s="The author is too lazy to give an alt",src:a,...t}=n;return p.createElement("a",{href:a,"data-fancybox":"gallery","data-caption":s},p.createElement("img",Object.assign({src:a,alt:s},t)))},Card:i.A,Link:r.N_},y=n=>{let{children:s,pageContext:a}=n;const{frontmatter:{title:e,date:o,updated:l,categories:r,tags:i,timeliness:m=!0}}=a,y=p.useRef(null),f=u()(o),h=l?u()(l):f,E=u()().diff(h,"days");return p.useEffect((()=>{var n;const s=null===(n=y.current)||void 0===n?void 0:n.querySelectorAll("a.gatsby-resp-image-link");return null==s||s.forEach((n=>{const s=n.children.item(1);n.setAttribute("data-fancybox","gallery"),n.setAttribute("data-caption",s.alt)})),c.lX.bind("[data-fancybox]"),()=>c.lX.unbind("[data-fancybox]")}),[]),p.createElement("div",{className:"mx-auto flex max-w-xl flex-col gap-y-12"},p.createElement("div",{className:"flex flex-col gap-4"},(null==r?void 0:r.length)&&p.createElement(k.A,{name:r[0],className:"item-selectable"}),p.createElement("h1",{className:"text-3xl font-bold"},e),p.createElement("div",{className:"item-secondary flex gap-2"},o&&p.createElement("span",{title:`首次发布于：${f.toString()}\n最后更新于：${h.toString()}`},f.format("MM 月 DD 日 YYYY 年")),(null==i?void 0:i.length)&&p.createElement("div",{className:"flex flex-1 flex-wrap gap-2 before:content-['•']"},i.map((n=>p.createElement(g.A,{key:n,name:n,className:"item-secondary item-selectable"})))))),p.createElement("article",{ref:y,className:"heti post-entry"},m&&E>365&&p.createElement("blockquote",{className:"border-l-4 border-orange-400"},"这是一篇",p.createElement("strong",null,"最后更新于 ",E," 天前"),"的博客，内容可能随着时间的推移而变得不再适用，建议您仔细评估信息的有效性。"),p.createElement(t.x,{components:d},s)))},f=n=>{let{pageContext:s}=n;return p.createElement(m.A,{title:s.frontmatter.title})};function h(n){return p.createElement(y,n,p.createElement(o,n))}}}]);
//# sourceMappingURL=component---src-templates-post-tsx-content-file-path-blog-posts-amap-import-vue-mdx-f6533a68396ab8058569.js.map