{"version":3,"file":"component---src-templates-post-list-tsx-0abc5fa099e00b7cb526.js","mappings":"kIAuBA,IAdgCA,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAClD,MAAQC,MAAOE,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,KAE1C,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aACGL,EAAM,MAAIE,GAEbG,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,IACjCF,EACA,C,mGCHP,MA4CaO,EAAOC,IAEoC,IAAAC,EAAA,IAFnC,YACnBC,GACiDF,EACjD,MAAM,SAAEG,EAAQ,IAAEC,GAAQF,EAC1B,OAAON,EAAAA,cAACS,EAAAA,EAAG,CAACd,MAAsB,QAAjBU,EAAEE,QAAAA,EAAYC,SAAG,IAAAH,EAAAA,EAAI,QAAU,EAGlD,UAjDIX,IAAc,IAAb,KAAEgB,GAAMhB,EACX,MACEiB,QAAUC,MAAOC,EAAQ,KACvBH,EACJ,OACEV,EAAAA,cAAA,MAAIc,UAAU,4EACXD,EAAME,KAAKC,GACVhB,EAAAA,cAAA,MAAIiB,IAAKD,EAAKE,OAAOC,MACnBnB,EAAAA,cAACoB,EAAAA,EAAI,CAACJ,KAAMA,EAAMK,KAAK,QAAQC,YAAU,OAG1C,C","sources":["webpack://homepage/./src/components/seo.tsx","webpack://homepage/./src/templates/post-list.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport interface SEOProps {\n  title: string;\n  children?: React.ReactElement;\n}\n\nconst SEO: React.FC<SEOProps> = ({ title, children }) => {\n  const { title: siteTitle, description } = useSiteMetadata();\n\n  return (\n    <>\n      <title>\n        {title} • {siteTitle}\n      </title>\n      <meta name=\"description\" content={description} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import { graphql, HeadProps, PageProps } from \"gatsby\";\nimport * as React from \"react\";\n\nimport Post, { type PostType } from \"../components/post\";\nimport SEO from \"../components/seo\";\n\ninterface PostListPageData {\n  allMdx: { nodes: PostType[] };\n}\n\ninterface PostListPageContext {\n  ids: string[];\n  category?: string;\n  tag?: string;\n}\n\nconst PostListTemplate: React.FC<\n  PageProps<PostListPageData, PostListPageContext>\n> = ({ data }) => {\n  const {\n    allMdx: { nodes: posts = [] },\n  } = data;\n  return (\n    <ol className=\"mb-8 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-1 xl:grid-cols-2\">\n      {posts.map((post) => (\n        <li key={post.fields.slug}>\n          <Post post={post} size=\"large\" showBanner />\n        </li>\n      ))}\n    </ol>\n  );\n};\n\nexport const query = graphql`\n  query ($ids: [String]) {\n    allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { id: { in: $ids } }\n    ) {\n      nodes {\n        excerpt(pruneLength: 200)\n        fields {\n          slug\n        }\n        frontmatter {\n          banner {\n            publicURL\n          }\n          categories\n          tags\n          title\n          date\n          updated\n          timeliness\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = ({\n  pageContext,\n}: HeadProps<PostListPageData, PostListPageContext>) => {\n  const { category, tag } = pageContext;\n  return <SEO title={category ?? tag ?? \"博客列表\"} />;\n};\n\nexport default PostListTemplate;\n"],"names":["_ref","title","children","siteTitle","description","useSiteMetadata","React","name","content","Head","_ref2","_ref3","pageContext","category","tag","SEO","data","allMdx","nodes","posts","className","map","post","key","fields","slug","Post","size","showBanner"],"sourceRoot":""}