{"version":3,"file":"component---src-pages-index-tsx-cc52db18a0aaa55f3df4.js","mappings":"kIAuBA,IAdgCA,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAClD,MAAQC,MAAOE,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,KAE1C,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aACGL,EAAM,MAAIE,GAEbG,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,IACjCF,EACA,C,oJCwCP,UAjDuCO,KACrC,MAAMC,GAAQC,EAAAA,EAAAA,KAERC,EAAgBN,EAAAA,SAAc,KAClC,MAAMO,EAA8C,CAAC,EAarD,OAZAH,EAAMI,SAASC,IACb,MAAMC,EAAO,IACRD,EACHE,MAAMC,EAAAA,EAAAA,GAAwBH,EAAKI,SAASC,kBAExCC,EAAWC,IAAMP,EAAKQ,YAAYC,MAAMC,OAC1CC,MAAMC,QAAQd,EAAOQ,IACvBR,EAAOQ,GAAUO,KAAKZ,GAEtBH,EAAOQ,GAAY,CAACL,EACtB,IAEKH,CAAM,GACZ,CAACH,IAEJ,OACEJ,EAAAA,cAAA,WACGuB,OAAOC,QAAQlB,GACbmB,UACAC,KAAIhC,IAAA,IAAEyB,EAAMf,GAAMV,EAAA,OACjBM,EAAAA,cAAA,OAAK2B,IAAKR,EAAMS,UAAU,SACxB5B,EAAAA,cAAA,OAAK4B,UAAU,aACb5B,EAAAA,cAAA,QAAM4B,UAAU,wCACbT,EAAKU,MAAM,IAAIH,KAAKI,GAAQC,EAAAA,GAAcC,OAAOF,OAEpD9B,EAAAA,cAAA,QAAM4B,UAAU,sEACbxB,EAAM6B,OAAO,OAGlBjC,EAAAA,cAAA,MAAI4B,UAAU,uEACXxB,EAAMsB,KAAKhB,GAERV,EAAAA,cAAA,MAAI2B,IAAKjB,EAAKwB,IACZlC,EAAAA,cAACmC,EAAAA,EAAI,CAACzB,KAAMA,EAAM0B,KAAK,cAK3B,IAEN,EAMH,MAAMC,EAAeA,IAAMrC,EAAAA,cAACsC,EAAAA,EAAG,CAAC3C,MAAM,M","sources":["webpack://homepage/./src/components/seo.tsx","webpack://homepage/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport interface SEOProps {\n  title: string;\n  children?: React.ReactElement;\n}\n\nconst SEO: React.FC<SEOProps> = ({ title, children }) => {\n  const { title: siteTitle, description } = useSiteMetadata();\n\n  return (\n    <>\n      <title>\n        {title} • {siteTitle}\n      </title>\n      <meta name=\"description\" content={description} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import dayjs from \"dayjs\";\nimport { HeadFC, PageProps } from \"gatsby\";\nimport * as React from \"react\";\n\nimport Post, { PostProps } from \"../components/post\";\nimport SEO from \"../components/seo\";\nimport { NUMBER_LETTER } from \"../constants/utils\";\nimport useAllMdx from \"../hooks/useAllMdx\";\nimport { parseFilePathToPostSlug } from \"../utils/post\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const posts = useAllMdx();\n\n  const postsWithYear = React.useMemo(() => {\n    const result: Record<number, PostProps[\"post\"][]> = {};\n    posts.forEach((node) => {\n      const post = {\n        ...node,\n        slug: parseFilePathToPostSlug(node.internal.contentFilePath),\n      };\n      const postYear = dayjs(node.frontmatter.date).year();\n      if (Array.isArray(result[postYear])) {\n        result[postYear].push(post);\n      } else {\n        result[postYear] = [post];\n      }\n    });\n    return result;\n  }, [posts]);\n\n  return (\n    <div>\n      {Object.entries(postsWithYear)\n        .reverse()\n        .map(([year, posts]) => (\n          <div key={year} className=\"mb-12\">\n            <div className=\"mb-4 px-4\">\n              <span className=\"text-xl font-bold text-primary-light\">\n                {year.split(\"\").map((num) => NUMBER_LETTER[Number(num)])}\n              </span>\n              <span className=\"text-sm text-foreground-secondary before:mx-2 before:content-['/']\">\n                {posts.length} 篇\n              </span>\n            </div>\n            <ol className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-1 xl:grid-cols-2\">\n              {posts.map((post) => {\n                return (\n                  <li key={post.id}>\n                    <Post post={post} size=\"large\" />\n                  </li>\n                );\n              })}\n            </ol>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <SEO title=\"主页\" />;\n"],"names":["_ref","title","children","siteTitle","description","useSiteMetadata","React","name","content","IndexPage","posts","useAllMdx","postsWithYear","result","forEach","node","post","slug","parseFilePathToPostSlug","internal","contentFilePath","postYear","dayjs","frontmatter","date","year","Array","isArray","push","Object","entries","reverse","map","key","className","split","num","NUMBER_LETTER","Number","length","id","Post","size","Head","SEO"],"sourceRoot":""}