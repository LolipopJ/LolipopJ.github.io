{"version":3,"file":"component---src-templates-post-tsx-content-file-path-blog-posts-windows-install-grpc-mdx-228e507dd22357de8de3.js","mappings":"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","sources":["webpack://homepage/./blog/posts/windows-install-grpc.mdx","webpack://homepage/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    a: \"a\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\",\n    strong: \"strong\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"本博客基于 CMake 实现编译 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gRPC 1.28.1</code>\"\n    }\n  }), \" 版本。\"), \"\\n\", React.createElement(_components.p, null, \"本博客的 Windows 端使用的命令提示符界面为 Powershell。\"), \"\\n\", React.createElement(_components.h2, null, \"安装编译依赖软件\"), \"\\n\", React.createElement(_components.p, null, \"在 Windows 系统上编译 gRPC 需要首先准备下述软件：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Visual Studio 2015（或 2017），将使用到 Visual C++ compiler\"), \"\\n\", React.createElement(_components.li, null, \"Git\"), \"\\n\", React.createElement(_components.li, null, \"CMake\"), \"\\n\", React.createElement(_components.li, null, \"nasm\"), \"\\n\", React.createElement(_components.li, null, \"ninja（可选）\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Visual Studio 2015 (或 2017)\"), \"\\n\", React.createElement(_components.p, null, \"用于编译 gRPC。下简称 VS。\"), \"\\n\", React.createElement(_components.p, null, \"在微软的 \", React.createElement(_components.a, {\n    href: \"https://visualstudio.microsoft.com/zh-hans/\"\n  }, \"VS 官网\"), \"下载安装即可。\"), \"\\n\", React.createElement(_components.h3, null, \"Git\"), \"\\n\", React.createElement(_components.p, null, \"用于拉取 gRPC 库并下载所需的第三方依赖。\"), \"\\n\", React.createElement(_components.p, null, \"在 \", React.createElement(_components.a, {\n    href: \"https://git-scm.com/\"\n  }, \"Git 官网\"), \"下载并安装即可。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token function\\\">PS</span> C:\\\\Users\\\\lolipop> git <span class=\\\"token operator\\\">--</span>version\\ngit version 2<span class=\\\"token punctuation\\\">.</span>21<span class=\\\"token punctuation\\\">.</span>0<span class=\\\"token punctuation\\\">.</span>windows<span class=\\\"token punctuation\\\">.</span>1</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"CMake\"), \"\\n\", React.createElement(_components.p, null, \"用于生成编译 gRPC 的 Makefile 文件。\"), \"\\n\", React.createElement(_components.p, null, \"在 \", React.createElement(_components.a, {\n    href: \"https://cmake.org/download/\"\n  }, \"CMake 官网\"), \"下载，可以选择下载 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.msi</code>\"\n    }\n  }), \" 文件直接安装。\"), \"\\n\", React.createElement(_components.p, null, \"例如对于 64 位的 Windows 电脑安装 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">CMake 3.20.1</code>\"\n    }\n  }), \"，找到：\"), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"Platform\"), React.createElement(_components.th, null, \"Files\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"Windows x64 Installer: Installer tool has changed. Uninstall CMake 3.4 or lower first!\"), React.createElement(_components.td, null, \"cmake-3.20.1-windows-x86_64.msi\")))), \"\\n\", React.createElement(_components.p, null, \"下载并运行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.msi</code>\"\n    }\n  }), \" 文件安装即可。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token function\\\">PS</span> C:\\\\Users\\\\lolipop> cmake <span class=\\\"token operator\\\">--</span>version\\ncmake version 3<span class=\\\"token punctuation\\\">.</span>20<span class=\\\"token punctuation\\\">.</span>1</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"nasm\"), \"\\n\", React.createElement(_components.p, null, \"gRPC 的第三方依赖 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boringssl</code>\"\n    }\n  }), \" 需要此软件。\"), \"\\n\", React.createElement(_components.p, null, \"在 \", React.createElement(_components.a, {\n    href: \"https://www.nasm.us/\"\n  }, \"nasm 官网\"), \"下载，可以选择下载 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.exe</code>\"\n    }\n  }), \" 文件直接安装。\"), \"\\n\", React.createElement(_components.p, null, \"例如对于 64 位的 Windows 电脑安装 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nasm 2.15.05</code>\"\n    }\n  }), \"，可以进入 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/pub/nasm/releasebuilds/2.15.05/win64</code>\"\n    }\n  }), \" 目录下载 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nasm-2.15.05-installer-x64.exe</code>\"\n    }\n  }), \" 文件并执行安装操作。\"), \"\\n\", React.createElement(_components.p, null, \"nasm 默认安装目录为 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">C:\\\\Users\\\\${您的工号}\\\\AppData\\\\Local\\\\bin\\\\NASM</code>\"\n    }\n  }), \"（若非此目录，请在安装界面确认安装的路径），将该目录添加到环境变量中即可。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token function\\\">PS</span> C:\\\\Users\\\\lolipop> nasm <span class=\\\"token operator\\\">--</span>version\\nNASM version 2<span class=\\\"token punctuation\\\">.</span>15<span class=\\\"token punctuation\\\">.</span>05 compiled on Aug 28 2020</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"ninja（可选）\"), \"\\n\", React.createElement(_components.p, null, \"您可以使用 Ninja 来加速编译。\"), \"\\n\", React.createElement(_components.p, null, \"假如您希望使用它，后续的编译操作可参考\", React.createElement(_components.a, {\n    href: \"https://github.com/grpc/grpc/blob/master/BUILDING.md#windows-using-ninja-faster-build\"\n  }, \"官方文档\"), \"，本博客\", React.createElement(_components.strong, null, \"不使用\"), \" Ninja 加速编译。\"), \"\\n\", React.createElement(_components.h2, null, \"拉取 gRPC 库\"), \"\\n\", React.createElement(_components.p, null, \"建议在能够连接 Github 的机器环境利用 Git 克隆 gRPC 库并获取第三方依赖，再打包出来给 windows 系统编译使用。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># 克隆 gRPC 仓库</span>\\n<span class=\\\"token comment\\\"># 对于特定的分支，例如 gRPC 1.28.1 版本，可以使用此命令：</span>\\n<span class=\\\"token comment\\\"># git clone https://github.com/grpc/grpc.git -b v1.28.1</span>\\n<span class=\\\"token function\\\">git</span> clone https://github.com/grpc/grpc.git\\n<span class=\\\"token comment\\\"># 获取 gRPC 第三方依赖</span>\\n<span class=\\\"token builtin class-name\\\">cd</span> grpc\\n<span class=\\\"token function\\\">git</span> submodule update <span class=\\\"token parameter variable\\\">--init</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"编译安装 gRPC\"), \"\\n\", React.createElement(_components.p, null, \"特别的，如果您使用的 CMake 版本低于 3.13，或编译的 gRPC 版本低于 1.27，在执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake</code>\"\n    }\n  }), \" 命令之前，需要自行手动编译安装 gRPC 的依赖库，且在执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake</code>\"\n    }\n  }), \" 命令时指定这些库的路径，这里是\", React.createElement(_components.a, {\n    href: \"https://github.com/grpc/grpc/blob/master/BUILDING.md#install-after-build\"\n  }, \"官方的说明\"), \"。\"), \"\\n\", React.createElement(_components.p, null, \"下面的内容基于的 CMake 版本不低于 3.13，且编译的 gRPC 版本不低于 1.27。\"), \"\\n\", React.createElement(_components.p, null, \"首先创建文件夹存储编译结果，并执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake</code>\"\n    }\n  }), \" 命令生成 Makefile 文件。使用\", React.createElement(_components.strong, null, \"管理员权限\"), \"打开命令行界面，执行下面的命令：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token comment\\\"># 在 grpc 目录下创建 .build 目录并进入</span>\\nmd <span class=\\\"token punctuation\\\">.</span>build\\ncd <span class=\\\"token punctuation\\\">.</span>build\\n<span class=\\\"token comment\\\"># 生成 Makefile 文件</span>\\n<span class=\\\"token comment\\\"># 其中 Visual Studio 15 2017 为当前的 VS 版本</span>\\ncmake <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span> <span class=\\\"token operator\\\">-</span>DgRPC_INSTALL=ON <span class=\\\"token operator\\\">-</span>G <span class=\\\"token string\\\">\\\"Visual Studio 15 2017\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"尽管\", React.createElement(_components.a, {\n    href: \"https://github.com/grpc/grpc/blob/master/BUILDING.md#windows-a-note-on-building-shared-libs-dlls\"\n  }, \"不推荐\"), \"，在上面执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake</code>\"\n    }\n  }), \" 命令时，您可以指定 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">-DBUILD_SHARED_LIBS=ON</code>\"\n    }\n  }), \" 以编译生成 gRPC C++ 的 DLL 文件。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"接下来对 gRPC 进行编译安装操作，包括两种方式，这里更建议使用 VS。\"), \"\\n\", React.createElement(_components.h3, null, \"使用 VS 编译并安装 gRPC\"), \"\\n\", React.createElement(_components.p, null, \"首先，使用\", React.createElement(_components.strong, null, \"管理员权限\"), \"打开 VS，否则在安装 gRPC 时会报错。\"), \"\\n\", React.createElement(_components.p, null, \"接着使用 VS 打开此目录下的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">grpc.sln</code>\"\n    }\n  }), \" 解决方案，找到\", React.createElement(_components.strong, null, \"解决方案资源管理器\"), \"（默认情况下在 VS 的右侧）中的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ALL_BUILD</code>\"\n    }\n  }), \" 项，右键并选择\", React.createElement(_components.strong, null, \"生成\"), \"按钮，开始执行编译操作。\"), \"\\n\", React.createElement(_components.p, null, \"编译结束后，在\", React.createElement(_components.strong, null, \"解决方案资源管理器\"), \"中找到 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">INSTALL</code>\"\n    }\n  }), \" 项，右键并选择\", React.createElement(_components.strong, null, \"生成\"), \"按钮，开始执行安装操作。\"), \"\\n\", React.createElement(_components.p, null, \"gRPC 默认安装在 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">C:\\\\Program Files (x86)\\\\grpc</code>\"\n    }\n  }), \" 目录。\"), \"\\n\", React.createElement(_components.p, null, \"如果报错，请确保您已使用管理员权限打开 VS。使用管理员权限重新打开 VS 后，右键点击 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ALL_BUILD</code>\"\n    }\n  }), \" 并选择\", React.createElement(_components.strong, null, \"重新生成\"), \"按钮即可。\"), \"\\n\", React.createElement(_components.h3, null, \"使用命令行编译并安装 gRPC\"), \"\\n\", React.createElement(_components.p, null, \"您也可以直接使用命令行界面，执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake</code>\"\n    }\n  }), \" 命令来编译安装 gRPC。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token comment\\\"># 编译并安装 gRPC</span>\\ncmake <span class=\\\"token operator\\\">--</span>build <span class=\\\"token punctuation\\\">.</span> <span class=\\\"token operator\\\">--</span>target install <span class=\\\"token operator\\\">--</span>config Release</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"编译结束后，会自动进行安装操作。\"), \"\\n\", React.createElement(_components.p, null, \"gRPC 默认安装在 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">C:\\\\Program Files (x86)\\\\grpc</code>\"\n    }\n  }), \" 目录。\"), \"\\n\", React.createElement(_components.p, null, \"如果没有使用管理员权限打开命令行界面，安装时会发生报错。请重新使用管理员权限打开命令行界面，并执行上面的命令。\"), \"\\n\", React.createElement(_components.h2, null, \"测试 gRPC 编译安装结果\"), \"\\n\", React.createElement(_components.p, null, \"接下来的步骤基于 VS 编译安装 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gRPC 1.28.1</code>\"\n    }\n  }), \" 的结果，测试 Windows 系统下的 gRPC 环境是否安装成功。\"), \"\\n\", React.createElement(_components.p, null, \"移动到 git 克隆的 gRPC 源码目录下的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">grpc\\\\examples\\\\cpp\\\\helloworld</code>\"\n    }\n  }), \" 目录，创建存放编译结果的文件夹 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake\\\\build</code>\"\n    }\n  }), \"，进入到该目录，执行下面的命令：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token comment\\\"># 生成 Makefile 文件</span>\\n<span class=\\\"token comment\\\"># 其中 C:\\\\Program Files (x86)\\\\grpc 是 gRPC 默认的安装目录</span>\\ncmake <span class=\\\"token operator\\\">-</span>DCMAKE_PREFIX_PATH=<span class=\\\"token string\\\">'C:\\\\Program Files (x86)\\\\grpc'</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token operator\\\">/</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"使用管理员权限打开 VS，并打开当前目录下的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">HelloWorld.sln</code>\"\n    }\n  }), \" 解决方案，右键分别选择解决方案资源管理器中的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">greeter_client.cc</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">greeter_server.cc</code>\"\n    }\n  }), \" 并点击生成按钮。\"), \"\\n\", React.createElement(_components.p, null, \"编译完成后，会在 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake\\\\build\\\\Debug</code>\"\n    }\n  }), \" 目录下生成我们需要的可执行文件 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">greeter_server.exe</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">greeter_client.exe</code>\"\n    }\n  }), \"。\"), \"\\n\", React.createElement(_components.p, null, \"使用 Powershell 移动到该目录，启动服务端 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">./greeter_server.exe</code>\"\n    }\n  }), \"：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token function\\\">PS</span> grpc\\\\examples\\\\<span class=\\\"token function\\\">cpp</span>\\\\helloworld\\\\cmake\\\\build\\\\Debug> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token operator\\\">/</span>greeter_server<span class=\\\"token punctuation\\\">.</span>exe\\nServer listening on 0<span class=\\\"token punctuation\\\">.</span>0<span class=\\\"token punctuation\\\">.</span>0<span class=\\\"token punctuation\\\">.</span>0:50051</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"服务端默认监听 50051 端口。\"), \"\\n\", React.createElement(_components.p, null, \"再启动一个 Powershell 移动到该目录，启动客户端 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">./greeter_client.exe</code>\"\n    }\n  }), \"：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"powershell\\\"><pre class=\\\"language-powershell\\\"><code class=\\\"language-powershell\\\"><span class=\\\"token function\\\">PS</span> grpc\\\\examples\\\\<span class=\\\"token function\\\">cpp</span>\\\\helloworld\\\\cmake\\\\build\\\\Debug> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token operator\\\">/</span>greeter_client<span class=\\\"token punctuation\\\">.</span>exe\\nGreeter received: Hello world</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"成功打印出 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Greeter received: Hello world</code>\"\n    }\n  }), \" 字段，测试成功！\"), \"\\n\", React.createElement(_components.p, null, \"作为对照组，您可以关闭掉服务端，再执行客户端，观察打印的结果。\"), \"\\n\", React.createElement(_components.p, null, \"Hello, gRPC world!\"), \"\\n\", React.createElement(_components.h2, null, \"参考资料\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://blog.csdn.net/xiaoyafang123/article/details/76529917\"\n  }, \"编译 gRPC(windows)和测试 demo\"), \" - 2017.08.01 - 注：博主填的转载，暂未找到原文链接\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/homepage/homepage/blog/posts/windows-install-grpc.mdx\";\nimport {Fancybox} from \"@fancyapps/ui\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\";\nimport Card from \"../components/card\";\nimport Category from \"../components/category\";\nimport SEO from \"../components/seo\";\nimport Tag from \"../components/tag\";\nconst FancyBoxImage = props => {\n  const {alt = \"The author is too lazy to give an alt\", src, ...restProps} = props;\n  return React.createElement(\"a\", {\n    href: src,\n    \"data-fancybox\": \"gallery\",\n    \"data-caption\": alt\n  }, React.createElement(\"img\", Object.assign({\n    src: src,\n    alt: alt\n  }, restProps)));\n};\nconst ALink = _ref => {\n  let {href = \"\", children} = _ref;\n  const isExternalHref = !(href !== null && href !== void 0 && href.startsWith(\"#\"));\n  const parsedHref = isExternalHref ? href : `#${encodeURIComponent(href.slice(1))}`;\n  return React.createElement(\"a\", {\n    href: parsedHref,\n    target: isExternalHref ? \"_blank\" : undefined,\n    rel: \"noreferrer\"\n  }, children);\n};\nconst components = {\n  a: ALink,\n  img: FancyBoxImage,\n  Card,\n  Link\n};\nconst PostTemplate = _ref2 => {\n  let {children, data} = _ref2;\n  const {mdx: {fields: {isDraft}, frontmatter: {title, date: dateString, updated: updatedDateString, categories, tags, timeliness}}} = data;\n  const articleRef = React.useRef(null);\n  const date = dayjs(dateString);\n  const updatedDate = updatedDateString ? dayjs(updatedDateString) : date;\n  const today = dayjs();\n  const diffDays = today.diff(updatedDate, \"days\");\n  React.useEffect(() => {\n    var _articleRef$current;\n    const optimizedImageLinks = (_articleRef$current = articleRef.current) === null || _articleRef$current === void 0 ? void 0 : _articleRef$current.querySelectorAll(\"a.gatsby-resp-image-link\");\n    optimizedImageLinks === null || optimizedImageLinks === void 0 ? void 0 : optimizedImageLinks.forEach(link => {\n      const image = link.children.item(1);\n      link.setAttribute(\"data-fancybox\", \"gallery\");\n      link.setAttribute(\"data-caption\", image.alt);\n    });\n    Fancybox.bind(\"[data-fancybox]\");\n    return () => Fancybox.unbind(\"[data-fancybox]\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mx-auto flex max-w-xl flex-col gap-y-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex flex-col gap-4\"\n  }, (categories === null || categories === void 0 ? void 0 : categories.length) && React.createElement(Category, {\n    name: categories[0],\n    className: \"item-selectable\"\n  }), React.createElement(\"h1\", {\n    className: \"text-3xl font-bold\"\n  }, title), React.createElement(\"div\", {\n    className: \"item-secondary flex flex-col gap-2 lg:flex-row\"\n  }, dateString && React.createElement(\"span\", {\n    title: `首次发布于：${date.toString()}\\n最后更新于：${updatedDate.toString()}`\n  }, date.format(\"MM 月 DD 日 YYYY 年\")), (tags === null || tags === void 0 ? void 0 : tags.length) && React.createElement(\"div\", {\n    className: \"flex flex-1 flex-wrap gap-2 lg:before:content-['\\u2022']\"\n  }, tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag,\n    className: \"item-secondary item-selectable\"\n  }))))), React.createElement(\"article\", {\n    ref: articleRef,\n    className: \"heti post-entry\"\n  }, isDraft && React.createElement(\"blockquote\", {\n    className: \"!border-red-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u672A\\u6B63\\u5F0F\\u53D1\\u5E03\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u5C1A\\u672A\\u64B0\\u5199\\u5B8C\\u5168\\u6216\\u5B58\\u5728\\u4E00\\u4E9B\\u7EB0\\u6F0F\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), timeliness !== false && diffDays > 365 && React.createElement(\"blockquote\", {\n    className: \"!border-orange-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u6700\\u540E\\u66F4\\u65B0\\u4E8E \", diffDays, \" \\u5929\\u524D\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u968F\\u7740\\u65F6\\u95F4\\u7684\\u63A8\\u79FB\\u800C\\u53D8\\u5F97\\u4E0D\\u518D\\u9002\\u7528\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\nconst query = \"2264136072\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: String(data.mdx.frontmatter.title)\n  });\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h2","ul","li","h3","a","table","thead","tr","th","tbody","td","strong","blockquote","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","_ref","children","isExternalHref","startsWith","parsedHref","encodeURIComponent","slice","target","undefined","rel","img","alt","src","restProps","Card","Link","PostTemplate","_ref2","data","mdx","fields","isDraft","frontmatter","title","date","dateString","updated","updatedDateString","categories","tags","timeliness","articleRef","dayjs","updatedDate","diffDays","diff","_articleRef$current","optimizedImageLinks","current","querySelectorAll","forEach","link","image","item","setAttribute","Fancybox","bind","unbind","className","length","Category","name","toString","format","map","tag","Tag","key","ref","MDXProvider","Head","_ref3","SEO","String","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}