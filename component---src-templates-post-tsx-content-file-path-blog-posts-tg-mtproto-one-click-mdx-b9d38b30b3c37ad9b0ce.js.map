{"version":3,"file":"component---src-templates-post-tsx-content-file-path-blog-posts-tg-mtproto-one-click-mdx-b9d38b30b3c37ad9b0ce.js","mappings":"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","sources":["webpack://homepage/./blog/posts/tg-mtproto-one-click.mdx","webpack://homepage/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h3: \"h3\",\n    strong: \"strong\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Telegram 和 MTProto 是什么\"), \"\\n\", React.createElement(_components.p, null, \"Telegram，中文名称为“电报”，或简称“tg”，是一款跨平台即时通讯软件，客户端完全开源。我觉得重要的有如下 Features：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"私密性高。不再使用的账号最长保留年限为 1 年，随时销毁聊天记录和一切账号资料。\"), \"\\n\", React.createElement(_components.li, null, \"安全性。端对端加密，不受审查。\"), \"\\n\", React.createElement(_components.li, null, \"完全免费。不限制上传文件（视频会有压缩），甚至可以拿来当备用网盘使用。不过已经确认会在将来布局群组广告，“钞能力”还是抵不过越来越多涌入的各国用户。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"当然，在被屏蔽的地域需要翻墙使用。\"), \"\\n\", React.createElement(_components.p, null, \"MTProto 是一种协议，旨在帮助移动设备上的应用程序访问服务器的 Api 接口。\"), \"\\n\", React.createElement(_components.h2, null, \"我们要做什么\"), \"\\n\", React.createElement(_components.p, null, \"我们想要搭建一个 Proxy，提供给移动端使用，可以快捷地访问到 tg 服务器。\"), \"\\n\", React.createElement(_components.p, null, \"移动端与电脑端不同的是，电脑端通常代理软件常开，随时可以通过 web 访问到 tg 服务器，而移动端则为了省电需要，仅在使用时才手动启用代理，稍显麻烦。\"), \"\\n\", React.createElement(_components.p, null, \"实际上电脑端的 tg 客户端也需要手动设置代理全局才能访问，那么有一个 Proxy 可以省很多事儿。\"), \"\\n\", React.createElement(_components.h2, null, \"嗨，这里是一键脚本\"), \"\\n\", React.createElement(_components.p, null, \"在 Github 上有为实现以上功能编写的基于 Python 的 Proxy: \", React.createElement(_components.a, {\n    href: \"https://github.com/alexbers/mtprotoproxy\"\n  }, \"mtprotoproxy\"), \"。号称：\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The proxy performance should be enough to comfortably serve about 4000 simultaneous users on the VDS instance with 1 CPU core and 1024MB RAM.\\n代理服务器的性能应该足以在使用 1 个 CPU 核心和 1024 MB 内存的 VDS 实例上同时为大约 4000 个用户提供舒适的服务。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"当然也有用其它语言写的 Proxy，不过最妙的还属一键安装配置脚本：\", React.createElement(_components.a, {\n    href: \"https://github.com/HirbodBehnam/MTProtoProxyInstaller\"\n  }, \"MTProtoProxyInstaller\"), \"。不用脑子！\"), \"\\n\", React.createElement(_components.p, null, \"那么，按照作者给出的指引走就可以了。\"), \"\\n\", React.createElement(_components.h3, null, \"购买一台自由访问 tg 的服务器\"), \"\\n\", React.createElement(_components.p, null, \"阿里云和腾讯云提供的轻量级应用服务器就很不错！选择香港地区即可，每月有 1 TB 的流量。\"), \"\\n\", React.createElement(_components.p, null, \"需要注意的是，此一键脚本仅支持如下 Linux 系统：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Centos 7/8\"), \"\\n\", React.createElement(_components.li, null, \"Ubuntu 16 或更新版本\"), \"\\n\", React.createElement(_components.li, null, \"Debian 8/9\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"选择代理版本\"), \"\\n\", React.createElement(_components.p, null, \"首先明确自己要使用哪个版本的代理，官方的，基于 Python 语言的，亦或是基于 Go 语言的。\"), \"\\n\", React.createElement(_components.p, null, \"作者建议在如下情况使用基于 Python 语言的代理：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"服务器 CPU 只有一个内核，或者只想在一个内核上运行代理。\"), \"\\n\", React.createElement(_components.li, null, \"服务器比较低端。\"), \"\\n\", React.createElement(_components.li, null, \"为一小群人提供服务，比如家庭或小公司。\"), \"\\n\", React.createElement(_components.li, null, \"想要限制用户的连接。\"), \"\\n\", React.createElement(_components.li, null, \"还将在服务器上运行其它应用程序或服务，例如 OpenVPN，Shadowsocks，Nginx 等。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"否则使用官方代理。\"), \"\\n\", React.createElement(_components.p, null, \"这里我选择使用\", React.createElement(_components.strong, null, \"基于 Python 语言\"), \"的代理，故下文将基于此版本阐述，若想使用其它版本可以自行查阅作者的\", React.createElement(_components.a, {\n    href: \"https://github.com/HirbodBehnam/MTProtoProxyInstaller#official-script\"\n  }, \"教程文档\"), \"。\"), \"\\n\", React.createElement(_components.h3, null, \"部署一键脚本\"), \"\\n\", React.createElement(_components.p, null, \"执行如下命令进行安装：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">curl</span> <span class=\\\"token parameter variable\\\">-o</span> MTProtoProxyInstall.sh <span class=\\\"token parameter variable\\\">-L</span> https://git.io/fjo34 <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">bash</span> MTProtoProxyInstall.sh</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"根据提示进行配置，觉得不妥还可以重新执行上述命令重装代理服务。\"), \"\\n\", React.createElement(_components.p, null, \"假如只添加了一个代理服务器，在安装完成后会出现如下文本：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">Ok it must be done. I created a service to run or stop the proxy.\\nUse \\\"systemctl start mtprotoproxy\\\" or \\\"systemctl stop mtprotoproxy\\\" to start or stop it\\n\\nUse these links to connect to your proxy:\\n${username}: tg://proxy?server=${ip}&amp;port=${port}&amp;secret=${secret}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"其中 ${username} 为之前输入的用户名（并不重要，只是标识），${ip} 是服务器的公网 IP 或域名，${port} 是设置的访问代理的端口，${secret} 是设置或自动生成的密钥。\"), \"\\n\", React.createElement(_components.p, null, \"这里作者提示可以用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">systemctl start mtprotoproxy</code>\"\n    }\n  }), \" 来启动代理服务了，作为补充，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">systemctl</code>\"\n    }\n  }), \" 是 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Systemd</code>\"\n    }\n  }), \" 进程管理命令，而 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Systemd</code>\"\n    }\n  }), \" 是一种 Linux 的系统工具，用来启动守护进程（即一直在后台运行的进程，daemon）。这说明当前 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mtprotoproxy</code>\"\n    }\n  }), \" 已经是可以启动的服务了，在后续的过程中只需要对此服务进行管理就可以了。\"), \"\\n\", React.createElement(_components.p, null, \"那么接下来就执行该命令来启动服务：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">systemctl start mtprotoproxy <span class=\\\"token comment\\\"># 启动代理服务</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"复制之前的链接 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">tg://proxy?server=${ip}&amp;port=${port}&amp;secret=${secret}</code>\"\n    }\n  }), \" 到剪切板，在手机端的 Telegram 上通过 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">设置 - 数据和存储 - 代理设置 - 添加代理 - 从剪贴板导入</code>\"\n    }\n  }), \" 即可完成设置。建议把这个链接记下来并保存。\"), \"\\n\", React.createElement(_components.h3, null, \"Ops，一点小麻烦\"), \"\\n\", React.createElement(_components.p, null, \"呃，似乎连接了半天也 ping 不通，这可如何是好，哪一步做错了吗？\"), \"\\n\", React.createElement(_components.p, null, \"可以先查阅一下日志信息，执行如下命令：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">systemctl status mtprotoproxy <span class=\\\"token parameter variable\\\">-l</span> <span class=\\\"token comment\\\"># 查看代理服务日志信息</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"查询到如下结果：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">● mtprotoproxy.service - MTProto Proxy Service\\n     Loaded: loaded (/etc/systemd/system/mtprotoproxy.service; enabled; vendor preset: enabled)\\n     Active: active (running) since Sun 2021-02-21 15:12:39 CST; 43s ago\\n   Main PID: 39895 (python3.8)\\n      Tasks: 5 (limit: 1111)\\n     Memory: 23.7M\\n     CGroup: /system.slice/mtprotoproxy.service\\n             └─39895 /usr/bin/python3.8 /opt/mtprotoproxy/mtprotoproxy.py\\n\\nFeb 21 15:13:18 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:18 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:19 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:19 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:19 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:19 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:20 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:20 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:23 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *\\nFeb 21 15:13:23 ******** python3.8[39895]: Unable to connect to ****:***:****:****::a *</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"幸运的是，在该仓库下的 Issues 里我找到了遇见相同问题的人（\", React.createElement(_components.a, {\n    href: \"https://github.com/HirbodBehnam/MTProtoProxyInstaller/issues/34\"\n  }, \"#34\"), \"）。\"), \"\\n\", React.createElement(_components.p, null, \"原来在最新版本的 Python 代理软件中，默认使用 IPv6，进而导致 MTProto 无法正常连接。作者提出可以在设置文件中手动设置禁用优先 IPv6 连接。操作如下：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token builtin class-name\\\">cd</span> /opt/mtprotoproxy <span class=\\\"token comment\\\"># 默认安装目录</span>\\n<span class=\\\"token function\\\">vi</span> config.py <span class=\\\"token comment\\\"># 编辑配置文件</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"在文件中添加一行配置信息 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">PREFER_IPV6 = False</code>\"\n    }\n  }), \" 即可。\"), \"\\n\", React.createElement(_components.p, null, \"由于服务没有热重载机制，因此在最后需要重启服务：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">systemctl restart mtprotoproxy <span class=\\\"token comment\\\"># 重启代理服务</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"一切搞定\"), \"\\n\", React.createElement(_components.p, null, \"现在已经可以正常访问 tg 客户端啦！假如愿意，可以将刚刚得到的链接分享给好友，enjoy tg world!\"), \"\\n\", React.createElement(_components.p, null, \"或许你会愿意再次打印一下日志信息，结果如下所示：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">● mtprotoproxy.service - MTProto Proxy Service\\n     Loaded: loaded (/etc/systemd/system/mtprotoproxy.service; enabled; vendor preset: enabled)\\n     Active: active (running) since Sun 2021-02-21 15:17:25 CST; 4s ago\\n   Main PID: 39940 (python3.8)\\n      Tasks: 5 (limit: 1111)\\n     Memory: 17.8M\\n     CGroup: /system.slice/mtprotoproxy.service\\n             └─39940 /usr/bin/python3.8 /opt/mtprotoproxy/mtprotoproxy.py\\n\\nFeb 21 15:17:25 ******** systemd[1]: Started MTProto Proxy Service.\\nFeb 21 15:17:25 ******** python3.8[39940]: *: tg://proxy?server=*&amp;port=*&amp;secret=*>\\nFeb 21 15:17:25 ******** python3.8[39940]: *: tg://proxy?server=*&amp;port=*&amp;secret=*>\\nFeb 21 15:17:25 ******** python3.8[39940]: Found uvloop, using it for optimal performance\\nFeb 21 15:17:25 ******** python3.8[39940]: Got cert from the MASK_HOST www.cloudflare.com, its length is 1828</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"除了前文已出现过的命令，别忘了此代理服务还可以暂停，依旧是作为服务进行管理就可以了：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">systemctl stop mtprotoproxy <span class=\\\"token comment\\\"># 暂停代理服务</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/homepage/homepage/blog/posts/tg-mtproto-one-click.mdx\";\nimport {Fancybox} from \"@fancyapps/ui\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\";\nimport Card from \"../components/card\";\nimport Category from \"../components/category\";\nimport SEO from \"../components/seo\";\nimport Tag from \"../components/tag\";\nconst FancyBoxImage = props => {\n  const {alt = \"The author is too lazy to give an alt\", src, ...restProps} = props;\n  return React.createElement(\"a\", {\n    href: src,\n    \"data-fancybox\": \"gallery\",\n    \"data-caption\": alt\n  }, React.createElement(\"img\", Object.assign({\n    src: src,\n    alt: alt\n  }, restProps)));\n};\nconst ALink = _ref => {\n  let {href = \"\", children} = _ref;\n  const isExternalHref = !(href !== null && href !== void 0 && href.startsWith(\"#\"));\n  const parsedHref = isExternalHref ? href : `#${encodeURIComponent(href.slice(1))}`;\n  return React.createElement(\"a\", {\n    href: parsedHref,\n    target: isExternalHref ? \"_blank\" : undefined,\n    rel: \"noreferrer\"\n  }, children);\n};\nconst components = {\n  a: ALink,\n  img: FancyBoxImage,\n  Card,\n  Link\n};\nconst PostTemplate = _ref2 => {\n  let {children, data} = _ref2;\n  const {mdx: {frontmatter: {title, date: dateString, updated: updatedDateString, categories, tags, timeliness}}} = data;\n  const articleRef = React.useRef(null);\n  const date = dayjs(dateString);\n  const updatedDate = updatedDateString ? dayjs(updatedDateString) : date;\n  const today = dayjs();\n  const diffDays = today.diff(updatedDate, \"days\");\n  React.useEffect(() => {\n    var _articleRef$current;\n    const optimizedImageLinks = (_articleRef$current = articleRef.current) === null || _articleRef$current === void 0 ? void 0 : _articleRef$current.querySelectorAll(\"a.gatsby-resp-image-link\");\n    optimizedImageLinks === null || optimizedImageLinks === void 0 ? void 0 : optimizedImageLinks.forEach(link => {\n      const image = link.children.item(1);\n      link.setAttribute(\"data-fancybox\", \"gallery\");\n      link.setAttribute(\"data-caption\", image.alt);\n    });\n    Fancybox.bind(\"[data-fancybox]\");\n    return () => Fancybox.unbind(\"[data-fancybox]\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mx-auto flex max-w-xl flex-col gap-y-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex flex-col gap-4\"\n  }, (categories === null || categories === void 0 ? void 0 : categories.length) && React.createElement(Category, {\n    name: categories[0],\n    className: \"item-selectable\"\n  }), React.createElement(\"h1\", {\n    className: \"text-3xl font-bold\"\n  }, title), React.createElement(\"div\", {\n    className: \"item-secondary flex flex-col gap-2 lg:flex-row\"\n  }, dateString && React.createElement(\"span\", {\n    title: `首次发布于：${date.toString()}\\n最后更新于：${updatedDate.toString()}`\n  }, date.format(\"MM 月 DD 日 YYYY 年\")), (tags === null || tags === void 0 ? void 0 : tags.length) && React.createElement(\"div\", {\n    className: \"flex flex-1 flex-wrap gap-2 lg:before:content-['\\u2022']\"\n  }, tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag,\n    className: \"item-secondary item-selectable\"\n  }))))), React.createElement(\"article\", {\n    ref: articleRef,\n    className: \"heti post-entry\"\n  }, timeliness !== false && diffDays > 365 && React.createElement(\"blockquote\", {\n    className: \"border-l-4 border-orange-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u6700\\u540E\\u66F4\\u65B0\\u4E8E \", diffDays, \" \\u5929\\u524D\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u968F\\u7740\\u65F6\\u95F4\\u7684\\u63A8\\u79FB\\u800C\\u53D8\\u5F97\\u4E0D\\u518D\\u9002\\u7528\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\nconst query = \"2697480803\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: String(data.mdx.frontmatter.title)\n  });\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","ul","li","a","blockquote","h3","strong","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","isExternalHref","startsWith","parsedHref","encodeURIComponent","slice","target","undefined","rel","img","alt","src","restProps","Card","Link","PostTemplate","_ref2","data","mdx","frontmatter","title","date","dateString","updated","updatedDateString","categories","tags","timeliness","articleRef","dayjs","updatedDate","diffDays","diff","_articleRef$current","optimizedImageLinks","current","querySelectorAll","forEach","link","image","item","setAttribute","Fancybox","bind","unbind","className","length","Category","name","toString","format","map","tag","Tag","key","ref","MDXProvider","Head","_ref3","SEO","String","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}