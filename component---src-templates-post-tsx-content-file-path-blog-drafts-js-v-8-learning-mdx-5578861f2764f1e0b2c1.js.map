{"version":3,"file":"component---src-templates-post-tsx-content-file-path-blog-drafts-js-v-8-learning-mdx-5578861f2764f1e0b2c1.js","mappings":"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","sources":["webpack://homepage/./blog/drafts/js-v8-learning.mdx","webpack://homepage/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h2: \"h2\",\n    h3: \"h3\",\n    strong: \"strong\",\n    h4: \"h4\",\n    span: \"span\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components), {Link} = _components;\n  if (!Link) _missingMdxReference(\"Link\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"V8 引擎是 Google 公司开发的开源 JavaScript 引擎，使用 C++ 语言编写，是目前最主流的 JavaScript 引擎，Chrome 和 Node.js 的底层都使用了 V8 引擎。了解 V8 引擎的工作过程和原理对一位前端工程师的重要程度不言而喻。\"), \"\\n\", React.createElement(_components.p, null, \"或者援引 Stack Overflow 创始人之一，艾林·约耳·斯波尔斯基的\", React.createElement(_components.a, {\n    href: \"https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/\"\n  }, \"博客\"), \"里的话来说：\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"由于抽象泄漏定律的存在，每当有人说自己发现了一款新的代码生成工具，能够大大提高我们的编程效率时，你会听很多人说“先学习手工编写，再去用工具生成”。代码生成工具是一种抽象，同样也会泄漏，唯一的解决方法是学习它的实现原理，即它抽象了什么。所以说抽象只是用于提高我们的工作效率的，而不会节省我们的学习时间。\\n这就形成了一个悖论：当我们拥有越来越高级的开发工具，越来越好的“抽象”，要成为一个高水平的程序员反而越来越困难了。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"本篇博文将记录我学习 V8 引擎过程中的一些笔记和思考。\"), \"\\n\", React.createElement(_components.h2, null, \"JavaScript 语言类型\"), \"\\n\", React.createElement(_components.p, null, \"在进入正题之前，我想先对 JavaScript 语言类型做一些描述。\"), \"\\n\", React.createElement(_components.h3, null, \"编译型语言和解释型语言\"), \"\\n\", React.createElement(_components.p, null, \"现如今大多数程序员使用的语言都属于\", React.createElement(_components.strong, null, \"高级语言\"), \"，如 C, C++, Java, Python, JavaScript 等，这些语言的编写更接近人的正常思维，可阅读性更好，实现相同功能需要的代码量更少，且更容易移植到不同平台上。但是，相较于机器语言和汇编语言此类\", React.createElement(_components.strong, null, \"低级语言\"), \"，高级语言的代码运行效率相对较低，对硬件的可控程度也较弱。\"), \"\\n\", React.createElement(_components.p, null, \"每个程序都是一组指令，无论是简单的加减还是复杂的互联网请求，在执行之前都需要将人类可读的高级语言，转换为计算机可读的低级语言。由于转换过程的区别，我们通常又将高级语言划分为两类：\", React.createElement(_components.strong, null, \"编译型语言\"), \"和\", React.createElement(_components.strong, null, \"解释型语言\"), \"。不过，随着编程语言的发展，有的高级语言的执行过程结合了编译型语言和解释型语言的特性，称之为\", React.createElement(_components.strong, null, \"混合型语言\"), \"。\"), \"\\n\", React.createElement(_components.p, null, \"对于编译型语言，目标计算机以编译语言直接翻译源代码，生成目标计算机可以执行的程序；对于解释型语言，目标计算机将源代码交给另一个程序（解释器）翻译并执行。用现实中的例子来讲就是：\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"想象你要制作一个鹰嘴豆泥食谱，但是它是用古希腊语写的。你不会讲古希腊语言，但是你可以通过两种方式遵循其指示。\\n第一种方法是有人已经为你翻译成中文，你（以及其他会说中文的人）可以阅读食谱的中文版本，制作鹰嘴豆泥。那么翻译的配方就是\", React.createElement(_components.strong, null, \"编译\"), \"版本。\\n另一种方法是，如果你有一位了解古希腊语的朋友，当你准备制作鹰嘴豆泥时，你的朋友会坐在你的旁边，将菜谱逐行翻译成中文念出来。在这种情况下，你的朋友是食谱\", React.createElement(_components.strong, null, \"解释\"), \"版本的解释者。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"编译型语言的优点是运行速度快，代码效率高，编译后程序看不到源码，保密性较高。除了你以外，其它会中文的人都可以参考这份中文食谱制作鹰嘴豆泥；缺点是需要经过编译才能使用，可移植性差，只能在兼容的系统上运行。假如鹰嘴豆泥食谱只有\", React.createElement(_components.a, {\n    href: \"https://zh.wikipedia.org/wiki/%E5%8F%A4%E9%AB%98%E5%9C%B0%E5%BE%B7%E8%AA%9E\"\n  }, \"古高地德语\"), \"的译版，不会古高地德语的你也就没法阅读它了。\"), \"\\n\", React.createElement(_components.p, null, \"解释型语言的优点是可移植性好，只要有解释器环境，程序就可以在不同系统上运行。你的朋友也可以坐在他的女朋友旁边，念给她这篇古希腊语食谱；缺点是代码执行需要专门的解释器，且每执行一次都需要翻译一次，运行效率较低。你需要一位会古希腊语的朋友，并且不厌其烦地念给你食谱上忘记的部分。\"), \"\\n\", React.createElement(_components.p, null, \"C, C++, Go 等就是典型的编译型语言，而 Java, Python, Matlab 等都属于解释型语言，至于 C#, .NET 则是混合型语言。那么 JavaScript 呢？\"), \"\\n\", React.createElement(_components.h3, null, \"JavaScript 是解释型语言还是编译型语言\"), \"\\n\", React.createElement(_components.p, null, \"MDN 指出：JavaScript 是一种具有函数优先的轻量级，\", React.createElement(_components.strong, null, \"解释型\"), \"或即时编译型的编程语言。\"), \"\\n\", React.createElement(_components.p, null, \"或许你会抛出疑问，那么为什么 JavaScript 会出现变量提升（Hoisting）现象，又为什么会有及时编译器（Just-in-time compilers，通常简称 JIT）存在呢？\"), \"\\n\", React.createElement(_components.h4, null, \"解释变量提升\"), \"\\n\", React.createElement(_components.p, null, React.createElement(Link, {\n    to: \"/posts/js-hoisting\"\n  }, \"变量提升\"), \"\\n，指函数作用域内的任何声明的变量都会被“提升”到顶部，并赋值为\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">undefined</code>\"\n    }\n  }), \"，这意味着在声明语句之前就可以使用这些变量了（后来 ES6 的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">let</code>\"\n    }\n  }), \" 和\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">const</code>\"\n    }\n  }), \" 命令解决了这个问题）。\"), \"\\n\", React.createElement(_components.p, null, \"这是否意味着 JavaScript 引擎解释同样的脚本文件两次？这显然会十分影响性能，且并不合理。还是意味着编译整个代码然后再运行它？其实也不是。这不过是解释器运行过程中执行上下文的小把戏罢了，以 V8 引擎为例：\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"一旦 V8 引擎进入一个执行具体代码的执行上下文，它就对代码进行词法分析或者分词。这意味着代码如 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">var foo = 3;</code>\"\n    }\n  }), \" 将被分割成像 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">var</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">foo</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">=</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">3</code>\"\n    }\n  }), \" 和 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">;</code>\"\n    }\n  }), \" 这样的 tokens。\"), \"\\n\", React.createElement(_components.li, null, \"在对当前的整个作用域分析完成后，引擎将这些 tokens 解析翻译成一个抽象语法树（AST）。\"), \"\\n\", React.createElement(_components.li, null, \"引擎每次遇到声明语句，就会把声明传到作用域中创建一个绑定。每次声明都会为变量分配内存，并赋予变量默认的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">undefined</code>\"\n    }\n  }), \" 值。\"), \"\\n\", React.createElement(_components.li, null, \"在这之后，引擎每一次遇到赋值或者取值，都会通过作用域查找绑定。如果在当前作用域中没有查找到就接着向上级作用域查找，直到找到为止。\"), \"\\n\", React.createElement(_components.li, null, \"接着引擎生成 CPU 可以执行的机器码。\"), \"\\n\", React.createElement(_components.li, null, \"最后，执行机器码。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"因此，变量提升也只是 JavaScript 解释器执行中的一环。更进一步，变量提升其实是第一批 JavaScript 虚拟机的编译器在设计上的失误所致，只不过得以保留而已。\"), \"\\n\", React.createElement(_components.h4, null, \"解释 JIT\"), \"\\n\", React.createElement(_components.p, null, \"解释型语言和编译型语言的一个重要区别是，编译型语言需要较长的时间来准备执行，因为它需要对整个代码进行词法分析，执行优化等工作；而解释型语言几乎在执行后的一瞬间就开始，不会有代码优化的准备时间。考虑这一段代码：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10000</span><span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  sum <span class=\\\"token operator\\\">+=</span> i<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"在编译型语言里，循环体中的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sum += 1</code>\"\n    }\n  }), \" 部分在运行时已经编译成了机器码，机器码将执行 10000 次。\"), \"\\n\", React.createElement(_components.p, null, \"而在解释型语言里，如果没有进行代码优化，那么就需要将 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sum += 1</code>\"\n    }\n  }), \" 操作转换 1 次才执行 1 次，显然会造成非常巨大的性能损耗。这正是在 JavaScript 中加入 JIT 的原因之一。\"), \"\\n\", React.createElement(_components.p, null, \"如果 JavaScript 中的同一行代码运行了多次，就把它叫作温（warm）代码。如果运行了特别多次，则称作热（hot）代码。\"), \"\\n\", React.createElement(_components.p, null, \"如果一个函数开始“变温”，JIT 就会把这个函数送到\", React.createElement(_components.strong, null, \"基准编译器\"), \"中编译并保存一个编译后的版本。下一次同样代码执行的时候，引擎就会跳过翻译过程而直接执行编译后的编码。\"), \"\\n\", React.createElement(_components.p, null, \"如果温代码运行次数越来越多，就成了热代码，JIT 会将热代码送到\", React.createElement(_components.strong, null, \"优化编译器\"), \"中去，尝试更多地优化这段代码并保存优化后的版本。在这个过程中，优化编译器会做一些关于变量类型和运行环境中值的假设，如果这些假设成立就使用优化后的版本，使得效率进一步提高，如果不成立则回滚到上一版本。\"), \"\\n\", React.createElement(_components.h3, null, \"JavaScript 语言类型小结\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"JavaScript 代码依赖于 JavaScript 引擎才能执行，这是解释型语言所需要的。而编译型语言在编译后能够自由运行。\"), \"\\n\", React.createElement(_components.li, null, \"JavaScript 中变量提升不是代码修改，也没有生成中间代码，只不过是解释器工作的流程之一。\"), \"\\n\", React.createElement(_components.li, null, \"JIT 并不是完整的编译器，同样它也只在执行前进行编译。Mozilla 和 Google 的工程师引入 JIT 以改进浏览器性能，但 JavaScript 或 Ecma TC39 从未要求使用它。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"综上所述，尽管 JavaScript 执行时像是在编译或是一种编译和解释的混合，它仍然属于解释型语言，或者说如今很多人谈到的\", React.createElement(_components.strong, null, \"混合型语言\"), \"。\"), \"\\n\", React.createElement(_components.p, null, \"现如今，编译和解释的技术不断发展，高级语言为了追求更强的兼容性或更出色的性能，会汲取二者的特性，发展成为更符合现代开发要求的语言。因此，关于高级语言的类型定义的界限可能会变得模糊，这时我们可以用混合型语言概括之，避免无谓的争端。\"), \"\\n\", React.createElement(_components.h2, null, \"V8 引擎概览\"), \"\\n\", React.createElement(_components.p, null, \"首先应指出的是，V8 引擎是一个仍在不断优化发展的项目，则对 V8 的学习也应该是动态渐进的。\"), \"\\n\", React.createElement(_components.h2, null, \"V8 引擎工作过程\"), \"\\n\", React.createElement(_components.h2, null, \"V8 引擎工作原理\"), \"\\n\", React.createElement(_components.h3, null, \"进一步学习 JIT\"), \"\\n\", React.createElement(_components.h2, null, \"JavaScript 与 TypeScript\"), \"\\n\", React.createElement(_components.h2, null, \"参考资料\"), \"\\n\", React.createElement(_components.h3, null, \"技术博文\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://chinese.freecodecamp.org/news/compiled-versus-interpreted-languages/\"\n  }, \"解释型语言和编译型语言的区别\"), \", 2021-01-06\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://segmentfault.com/a/1190000013126460\"\n  }, \"JavaScript 到底是解释型语言还是编译型语言?\"), \", 2019-07-30, 英文\", React.createElement(_components.a, {\n    href: \"https://www.voidcanvas.com/is-javascript-really-interpreted-or-compiled-language/\"\n  }, \"原文链接\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://hacks.mozilla.org/2017/02/a-crash-course-in-just-in-time-jit-compilers/\"\n  }, \"A crash course in just-in-time (JIT) compilers\"), \", 2017-02-28\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"其它资料\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/getify/You-Dont-Know-JS\"\n  }, \"You Don't Know Javascript\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\"\n  }, \"MDN Web Docs - JavaScript\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/homepage/homepage/blog/drafts/js-v8-learning.mdx\";\nimport {Fancybox} from \"@fancyapps/ui\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\";\nimport Card from \"../components/card\";\nimport Category from \"../components/category\";\nimport SEO from \"../components/seo\";\nimport Tag from \"../components/tag\";\nconst FancyBoxImage = props => {\n  const {alt = \"The author is too lazy to give an alt\", src, ...restProps} = props;\n  return React.createElement(\"a\", {\n    href: src,\n    \"data-fancybox\": \"gallery\",\n    \"data-caption\": alt\n  }, React.createElement(\"img\", Object.assign({\n    src: src,\n    alt: alt\n  }, restProps)));\n};\nconst ALink = _ref => {\n  let {href = \"\", children} = _ref;\n  const isExternalHref = !(href !== null && href !== void 0 && href.startsWith(\"#\"));\n  const parsedHref = isExternalHref ? href : `#${encodeURIComponent(href.slice(1))}`;\n  return React.createElement(\"a\", {\n    href: parsedHref,\n    target: isExternalHref ? \"_blank\" : undefined,\n    rel: \"noreferrer\"\n  }, children);\n};\nconst components = {\n  a: ALink,\n  img: FancyBoxImage,\n  Card,\n  Link\n};\nconst PostTemplate = _ref2 => {\n  let {children, data} = _ref2;\n  const {mdx: {frontmatter: {title, date: dateString, updated: updatedDateString, categories, tags, timeliness = true}}} = data;\n  const articleRef = React.useRef(null);\n  const date = dayjs(dateString);\n  const updatedDate = updatedDateString ? dayjs(updatedDateString) : date;\n  const today = dayjs();\n  const diffDays = today.diff(updatedDate, \"days\");\n  React.useEffect(() => {\n    var _articleRef$current;\n    const optimizedImageLinks = (_articleRef$current = articleRef.current) === null || _articleRef$current === void 0 ? void 0 : _articleRef$current.querySelectorAll(\"a.gatsby-resp-image-link\");\n    optimizedImageLinks === null || optimizedImageLinks === void 0 ? void 0 : optimizedImageLinks.forEach(link => {\n      const image = link.children.item(1);\n      link.setAttribute(\"data-fancybox\", \"gallery\");\n      link.setAttribute(\"data-caption\", image.alt);\n    });\n    Fancybox.bind(\"[data-fancybox]\");\n    return () => Fancybox.unbind(\"[data-fancybox]\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mx-auto flex max-w-xl flex-col gap-y-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex flex-col gap-4\"\n  }, (categories === null || categories === void 0 ? void 0 : categories.length) && React.createElement(Category, {\n    name: categories[0],\n    className: \"item-selectable\"\n  }), React.createElement(\"h1\", {\n    className: \"text-3xl font-bold\"\n  }, title), React.createElement(\"div\", {\n    className: \"item-secondary flex flex-col gap-2 lg:flex-row\"\n  }, dateString && React.createElement(\"span\", {\n    title: `首次发布于：${date.toString()}\\n最后更新于：${updatedDate.toString()}`\n  }, date.format(\"MM 月 DD 日 YYYY 年\")), (tags === null || tags === void 0 ? void 0 : tags.length) && React.createElement(\"div\", {\n    className: \"flex flex-1 flex-wrap gap-2 lg:before:content-['\\u2022']\"\n  }, tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag,\n    className: \"item-secondary item-selectable\"\n  }))))), React.createElement(\"article\", {\n    ref: articleRef,\n    className: \"heti post-entry\"\n  }, timeliness && diffDays > 365 && React.createElement(\"blockquote\", {\n    className: \"border-l-4 border-orange-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u6700\\u540E\\u66F4\\u65B0\\u4E8E \", diffDays, \" \\u5929\\u524D\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u968F\\u7740\\u65F6\\u95F4\\u7684\\u63A8\\u79FB\\u800C\\u53D8\\u5F97\\u4E0D\\u518D\\u9002\\u7528\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\nconst query = \"2697480803\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: String(data.mdx.frontmatter.title)\n  });\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","blockquote","h2","h3","strong","h4","span","ol","li","ul","_provideComponents","components","Link","id","component","Error","_missingMdxReference","React","href","to","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","isExternalHref","startsWith","parsedHref","encodeURIComponent","slice","target","undefined","rel","img","alt","src","restProps","Card","PostTemplate","_ref2","data","mdx","frontmatter","title","date","dateString","updated","updatedDateString","categories","tags","timeliness","articleRef","dayjs","updatedDate","diffDays","diff","_articleRef$current","optimizedImageLinks","current","querySelectorAll","forEach","link","image","item","setAttribute","Fancybox","bind","unbind","className","length","Category","name","toString","format","map","tag","Tag","key","ref","MDXProvider","Head","_ref3","SEO","String","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}