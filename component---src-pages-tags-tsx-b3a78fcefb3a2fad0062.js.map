{"version":3,"file":"component---src-pages-tags-tsx-b3a78fcefb3a2fad0062.js","mappings":"kIAuBA,IAdgCA,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAClD,MAAQC,MAAOE,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,KAE1C,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aACGL,EAAM,MAAIE,GAEbG,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,IACjCF,EACA,C,6GC4BP,UAzCkCO,KAChC,MAAMC,GAAQC,EAAAA,EAAAA,KAERC,EAAON,EAAAA,SAAc,KACzB,MAAMO,EAAiC,CAAC,EAWxC,OAVAH,EAAMI,SAASC,IAAS,IAAAC,GACgB,QAAxBA,EAAGD,EAAKE,YAAYL,YAAI,IAAAI,EAAAA,EAAI,IACjCF,SAASI,IACZL,EAAOK,GACTL,EAAOK,IAAQ,EAEfL,EAAOK,GAAO,CAChB,GACA,IAEGC,OAAOC,QAAQP,GAAQQ,MAAK,CAACC,EAAGC,IAAMA,EAAE,GAAKD,EAAE,IAAG,GACxD,CAACZ,IAEJ,OACEJ,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIkB,UAAU,wBACXZ,EAAKa,KAAIzB,IAA0B,IAAxB0B,EAASC,GAAU3B,EAC7B,OACEM,EAAAA,cAAA,MAAIsB,IAAKF,GACPpB,EAAAA,cAACuB,EAAAA,KAAI,CACHC,GAAI,SAASC,mBAAmBL,KAChCF,UAAU,wCAEVlB,EAAAA,cAAA,QAAMkB,UAAU,aAAaE,GAC7BpB,EAAAA,cAAA,QAAMkB,UAAU,sEACbG,EAAU,OAGZ,KAIP,EAMH,MAAMK,EAAeA,IAAM1B,EAAAA,cAAC2B,EAAAA,EAAG,CAAChC,MAAM,Q","sources":["webpack://homepage/./src/components/seo.tsx","webpack://homepage/./src/pages/tags.tsx"],"sourcesContent":["import * as React from \"react\";\n\nimport useSiteMetadata from \"../hooks/useSiteMetadata\";\n\nexport interface SEOProps {\n  title: string;\n  children?: React.ReactElement;\n}\n\nconst SEO: React.FC<SEOProps> = ({ title, children }) => {\n  const { title: siteTitle, description } = useSiteMetadata();\n\n  return (\n    <>\n      <title>\n        {title} • {siteTitle}\n      </title>\n      <meta name=\"description\" content={description} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import { HeadFC, Link, PageProps } from \"gatsby\";\nimport * as React from \"react\";\n\nimport SEO from \"../components/seo\";\nimport useAllMdx from \"../hooks/useAllMdx\";\n\nconst Tags: React.FC<PageProps> = () => {\n  const posts = useAllMdx();\n\n  const tags = React.useMemo(() => {\n    const result: Record<string, number> = {};\n    posts.forEach((post) => {\n      const postTags = post.frontmatter.tags ?? [];\n      postTags.forEach((tag) => {\n        if (result[tag]) {\n          result[tag] += 1;\n        } else {\n          result[tag] = 1;\n        }\n      });\n    });\n    return Object.entries(result).sort((a, b) => b[1] - a[1]);\n  }, [posts]);\n\n  return (\n    <div>\n      <ol className=\"flex flex-wrap gap-3\">\n        {tags.map(([tagName, postCount]) => {\n          return (\n            <li key={tagName}>\n              <Link\n                to={`/tags/${encodeURIComponent(tagName)}`}\n                className=\"item-selectable rounded-md px-3 py-2\"\n              >\n                <span className=\"font-bold\">{tagName}</span>\n                <span className=\"text-sm text-foreground-secondary before:mx-1 before:content-['/']\">\n                  {postCount} 篇\n                </span>\n              </Link>\n            </li>\n          );\n        })}\n      </ol>\n    </div>\n  );\n};\n\nexport default Tags;\n\nexport const Head: HeadFC = () => <SEO title=\"所有标签\" />;\n"],"names":["_ref","title","children","siteTitle","description","useSiteMetadata","React","name","content","Tags","posts","useAllMdx","tags","result","forEach","post","_post$frontmatter$tag","frontmatter","tag","Object","entries","sort","a","b","className","map","tagName","postCount","key","Link","to","encodeURIComponent","Head","SEO"],"sourceRoot":""}