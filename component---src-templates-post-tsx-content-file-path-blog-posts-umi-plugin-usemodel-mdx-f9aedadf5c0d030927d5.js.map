{"version":3,"file":"component---src-templates-post-tsx-content-file-path-blog-posts-umi-plugin-usemodel-mdx-f9aedadf5c0d030927d5.js","mappings":"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","sources":["webpack://homepage/./blog/posts/umi-plugin-usemodel.mdx","webpack://homepage/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Umi 是一款企业级的 React 前端应用框架，云巧产业数字组件中心推荐使用基于 Umi 的 Koi 框架统一前端应用研发流程，支撑前端项目从研发、联调到上线、发布的全流程。\"), \"\\n\", React.createElement(_components.p, null, \"本文假设您正在或计划使用 Umi 或 Koi 作为底层框架支撑前端应用的开发，并且对 Umi 有一定的了解。\"), \"\\n\", React.createElement(_components.h2, null, \"数据治理的原则\"), \"\\n\", React.createElement(_components.p, null, \"React 的核心特征是“数据驱动视图”，用公式表达即 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">UI = render(data)</code>\"\n    }\n  }), \"，通过数据变化来驱动视图变化。React 将组件内部自有的数据称作 state（状态），通过管理 state 来实现对组件的管理。\"), \"\\n\", React.createElement(_components.p, null, \"通过 Props 传参，可以在 React 中实现简单的父子、子父和兄弟组件间数据传递。对于跨级组件间的数据传递，React 提供了基于生产者-消费者模式的 Context API 来实现全局通信。\"), \"\\n\", React.createElement(_components.p, null, \"随着应用的膨胀，组件内部的状态变得愈加复杂，数据流管理的成本也越来越高。如果说所有代码的末路都是成为一座难以维护的大山的话，在那之前，我们应当好好想想如何尽可能多地延长代码的寿命，去重新思考我们的 React 项目的代码组织逻辑。\"), \"\\n\", React.createElement(_components.p, null, \"Umi 建议将所有组件降级为“无状态组件”，仅仅依赖 Props 或 Context 进行渲染。这样，在 UI 层面仅关心用户交互和渲染的逻辑，在单独的数据层去关心数据处理的逻辑。以 Umi 项目为例，具体而言就是：\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">src/models</code>\"\n    }\n  }), \" 中的文件管理数据层的逻辑，包含网络请求、数据处理等。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">src/pages</code>\"\n    }\n  }), \" 中的页面组件与数据层进行交互，并将得到的数据通过 Props 或 Context 传递给通用组件，进行页面渲染。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">src/components</code>\"\n    }\n  }), \" 中的通用组件仅仅依赖从 Props 或 Context 得到的数据进行渲染，不与数据层发生直接交互。\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"介绍 model 简易数据流插件\"), \"\\n\", React.createElement(_components.p, null, \"Umi 的 model 简易数据流插件就是基于 Context 的封装，使得数据能够在项目全局共享与使用。相比原生的 Context API，model 简易数据流插件更加便于使用。\"), \"\\n\", React.createElement(_components.p, null, \"使用 Context API 时，需要创建上下文对象，并在渲染树顶层包装上下文的 Provider：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// src/contexts/userContext.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> createContext<span class=\\\"token punctuation\\\">,</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> UserContext <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createContext</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">UserContextProvider</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>props<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>username<span class=\\\"token punctuation\\\">,</span> setUsername<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">useState</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">UserContext.Provider</span></span> <span class=\\\"token attr-name\\\">value</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> username <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">UserContext.Provider</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// src/layouts/index.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Outlet <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"umi\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> UserContextProvider <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"@/contexts/userContext\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Layout</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">UserContextProvider</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Outlet</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">UserContextProvider</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> Layout<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"使用简易数据流插件可以略去创建上下文对象和包装 Provider 的过程，仅需要按约定目录导出一个自定义的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hook</code>\"\n    }\n  }), \" 函数即可：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// src/models/userModel.ts</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useState <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>username<span class=\\\"token punctuation\\\">,</span> setUsername<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">useState</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span><span class=\\\"token builtin\\\">string</span><span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span> username <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"在组件使用上下文中存储的数据时，Context API 需要：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useContext <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> UserContext <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"@/contexts/userContext\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">pageElement</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> username <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useContext</span><span class=\\\"token punctuation\\\">(</span>UserContext<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>username<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> pageElement<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"而使用简易数据流插件可以略去引入指定上下文对象的过程，Umi 已经自动为它创建了一个命名空间：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useModel <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"umi\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">pageElement</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> username <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"userModel\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>username<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> pageElement<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"由于调用了 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useContext</code>\"\n    }\n  }), \" 的组件总会在 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">context</code>\"\n    }\n  }), \" 值变化时重新渲染，可能需要使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useMemo</code>\"\n    }\n  }), \" 或 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">memo</code>\"\n    }\n  }), \" 来优化重渲染开销较大的组件：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> useContext<span class=\\\"token punctuation\\\">,</span> useMemo <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> UserContext <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"@/contexts/userContext\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">pageElement</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> username <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useContext</span><span class=\\\"token punctuation\\\">(</span>UserContext<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">useMemo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ExpensiveTree</span></span> <span class=\\\"token attr-name\\\">username</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>username<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>username<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> pageElement<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"使用简易数据流插件时同样可以使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useMemo</code>\"\n    }\n  }), \" 或 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">memo</code>\"\n    }\n  }), \" 来进行优化，但更好的选择是直接利用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">useModel()</code>\"\n    }\n  }), \" 提供的过滤方法，只关心需要的数据：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useModel <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"umi\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">pageElement</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> username <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useModel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"userModel\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>model<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    username<span class=\\\"token operator\\\">:</span> model<span class=\\\"token punctuation\\\">.</span>username<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ExpensiveTree</span></span> <span class=\\\"token attr-name\\\">username</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>username<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> pageElement<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"综上所述，Umi 的 model 简易数据流插件实现了对 Context API 的较好封装，能够降本增效，简化代码的编写。对于需要使用 Context 管理数据流的情况，都可以使用 model 简易数据流插件替代。\"), \"\\n\", React.createElement(_components.h2, null, \"什么时候使用 model 简易数据流插件\"), \"\\n\", React.createElement(_components.p, null, \"近年来，微前端架构的兴起为企业前端应用开发注入了新的活力，随着巨型前端应用拆解成一个个小微型前端应用，页面数据的治理难度也大大降低了。\"), \"\\n\", React.createElement(_components.p, null, \"当您使用 Umi 或 Koi 开发\", React.createElement(_components.strong, null, \"小微型前端应用\"), \"遇到全局状态共享或数据流管理需求时，model 简易数据流插件具有\", React.createElement(_components.strong, null, \"便利\"), \"、\", React.createElement(_components.strong, null, \"低心智负担\"), \"的优势，不妨好好利用它来管理页面数据。\"), \"\\n\", React.createElement(_components.p, null, \"针对更复杂的数据流管理需求（例如数据可预知甚至可回溯等），model 简易数据流插件显得有些捉襟见肘了：它只负责将数据全局化。别担心，开源社区提供了大量专注于做好数据流管理这件事的方案，例如 \", React.createElement(_components.a, {\n    href: \"https://github.com/reduxjs/redux\"\n  }, \"Redux\"), \" 和 \", React.createElement(_components.a, {\n    href: \"https://github.com/mobxjs/mobx\"\n  }, \"MobX\"), \" 等；Umi 官方目前也提供了对接 \", React.createElement(_components.a, {\n    href: \"https://github.com/dvajs/dva\"\n  }, \"dva\"), \" 和 \", React.createElement(_components.a, {\n    href: \"https://github.com/pmndrs/valtio\"\n  }, \"Valtio\"), \" 数据流管理库的插件，开箱即用。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/homepage/homepage/blog/posts/umi-plugin-usemodel.mdx\";\nimport {Fancybox} from \"@fancyapps/ui\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\";\nimport Card from \"../components/card\";\nimport Category from \"../components/category\";\nimport SEO from \"../components/seo\";\nimport Tag from \"../components/tag\";\nconst FancyBoxImage = props => {\n  const {alt = \"The author is too lazy to give an alt\", src, ...restProps} = props;\n  return React.createElement(\"a\", {\n    href: src,\n    \"data-fancybox\": \"gallery\",\n    \"data-caption\": alt\n  }, React.createElement(\"img\", Object.assign({\n    src: src,\n    alt: alt\n  }, restProps)));\n};\nconst ALink = _ref => {\n  let {href = \"\", children} = _ref;\n  const isExternalHref = !(href !== null && href !== void 0 && href.startsWith(\"#\"));\n  const parsedHref = isExternalHref ? href : `#${encodeURIComponent(href.slice(1))}`;\n  return React.createElement(\"a\", {\n    href: parsedHref,\n    target: isExternalHref ? \"_blank\" : undefined,\n    rel: \"noreferrer\"\n  }, children);\n};\nconst components = {\n  a: ALink,\n  img: FancyBoxImage,\n  Card,\n  Link\n};\nconst PostTemplate = _ref2 => {\n  let {children, data} = _ref2;\n  const {mdx: {frontmatter: {title, date: dateString, updated: updatedDateString, categories, tags, timeliness = true}}} = data;\n  const articleRef = React.useRef(null);\n  const date = dayjs(dateString);\n  const updatedDate = updatedDateString ? dayjs(updatedDateString) : date;\n  const today = dayjs();\n  const diffDays = today.diff(updatedDate, \"days\");\n  React.useEffect(() => {\n    var _articleRef$current;\n    const optimizedImageLinks = (_articleRef$current = articleRef.current) === null || _articleRef$current === void 0 ? void 0 : _articleRef$current.querySelectorAll(\"a.gatsby-resp-image-link\");\n    optimizedImageLinks === null || optimizedImageLinks === void 0 ? void 0 : optimizedImageLinks.forEach(link => {\n      const image = link.children.item(1);\n      link.setAttribute(\"data-fancybox\", \"gallery\");\n      link.setAttribute(\"data-caption\", image.alt);\n    });\n    Fancybox.bind(\"[data-fancybox]\");\n    return () => Fancybox.unbind(\"[data-fancybox]\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mx-auto flex max-w-xl flex-col gap-y-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex flex-col gap-4\"\n  }, (categories === null || categories === void 0 ? void 0 : categories.length) && React.createElement(Category, {\n    name: categories[0],\n    className: \"item-selectable\"\n  }), React.createElement(\"h1\", {\n    className: \"text-3xl font-bold\"\n  }, title), React.createElement(\"div\", {\n    className: \"item-secondary flex flex-col gap-2 lg:flex-row\"\n  }, dateString && React.createElement(\"span\", {\n    title: `首次发布于：${date.toString()}\\n最后更新于：${updatedDate.toString()}`\n  }, date.format(\"MM 月 DD 日 YYYY 年\")), (tags === null || tags === void 0 ? void 0 : tags.length) && React.createElement(\"div\", {\n    className: \"flex flex-1 flex-wrap gap-2 lg:before:content-['\\u2022']\"\n  }, tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag,\n    className: \"item-secondary item-selectable\"\n  }))))), React.createElement(\"article\", {\n    ref: articleRef,\n    className: \"heti post-entry\"\n  }, timeliness && diffDays > 365 && React.createElement(\"blockquote\", {\n    className: \"border-l-4 border-orange-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u6700\\u540E\\u66F4\\u65B0\\u4E8E \", diffDays, \" \\u5929\\u524D\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u968F\\u7740\\u65F6\\u95F4\\u7684\\u63A8\\u79FB\\u800C\\u53D8\\u5F97\\u4E0D\\u518D\\u9002\\u7528\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\nconst query = \"2697480803\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: String(data.mdx.frontmatter.title)\n  });\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","span","ul","li","strong","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","_ref","children","isExternalHref","startsWith","parsedHref","encodeURIComponent","slice","target","undefined","rel","img","alt","src","restProps","Card","Link","PostTemplate","_ref2","data","mdx","frontmatter","title","date","dateString","updated","updatedDateString","categories","tags","timeliness","articleRef","dayjs","updatedDate","diffDays","diff","_articleRef$current","optimizedImageLinks","current","querySelectorAll","forEach","link","image","item","setAttribute","Fancybox","bind","unbind","className","length","Category","name","toString","format","map","tag","Tag","key","ref","MDXProvider","Head","_ref3","SEO","String","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}