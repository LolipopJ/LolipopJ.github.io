{"version":3,"file":"component---src-templates-post-tsx-content-file-path-blog-drafts-grafana-log-system-mdx-27d4bb3c5368b9ec775f.js","mappings":"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","sources":["webpack://homepage/./blog/drafts/grafana-log-system.mdx","webpack://homepage/./src/templates/post.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    span: \"span\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"新买了服务器果然能为自己创造一个又一个接连不断的需求。例如今天，想到公网服务器上跑的定时脚本会把日志重定向到指定的文件里，但是并不会自动清理，意味着它们会在几十年后占满笔者的硬盘空间，这是不可接受不可妥协的！因此今天，笔者打算部署日志管理服务，统一存储各个地方的日志信息，方便管理，也方便快速发现并定位问题。\"), \"\\n\", React.createElement(_components.h2, null, \"部署 Loki 和 Grafana 容器\"), \"\\n\", React.createElement(_components.p, null, \"在 Github 上以 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">log</code>\"\n    }\n  }), \" 为关键词，按星标数排序，目前排名第一的开源软件是 \", React.createElement(_components.a, {\n    href: \"https://github.com/grafana/grafana\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">grafana/grafana</code>\"\n    }\n  })), \"，浏览使用文档后觉得它远远满足笔者的需要，就该用大炮打蚊子，遂决定在 Docker 上部署之。\"), \"\\n\", React.createElement(_components.h2, null, \"重定向日志信息到 Loki\"), \"\\n\", React.createElement(_components.h3, null, \"重定向定时脚本日志信息\"), \"\\n\", React.createElement(_components.h3, null, \"重定向 Docker 容器日志信息\"), \"\\n\", React.createElement(_components.p, null, \"忘记当时 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker run</code>\"\n    }\n  }), \" 后面的一串参数怎么办？用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker inspect</code>\"\n    }\n  }), \" 去找灵感也太麻烦了！这烦恼了笔者一阵，幸运的是以前有人遇到这样的烦恼后，开发了 \", React.createElement(_components.a, {\n    href: \"https://github.com/lavie/runlike\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">runlike</code>\"\n    }\n  })), \" 工具，它可以帮助打印出运行指定容器时可能使用到的参数。\"), \"\\n\", React.createElement(_components.p, null, \"拉取 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">assaflavie/runlike</code>\"\n    }\n  }), \" 镜像：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">docker</span> pull assaflavie/runlike</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"编辑 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">~/.bashrc</code>\"\n    }\n  }), \" 或 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">~/.zshrc</code>\"\n    }\n  }), \"，添加命令别名 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">runlike</code>\"\n    }\n  }), \"：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token builtin class-name\\\">alias</span> <span class=\\\"token assign-left variable\\\">runlike</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"docker run --rm -v /var/run/docker.sock:/var/run/docker.sock assaflavie/runlike\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"重启终端，只需要执行 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">runlike &lt;container-name></code>\"\n    }\n  }), \" 即可查看可以用于启动容器的命令了。\"), \"\\n\", React.createElement(_components.p, null, \"以笔者部署的 AList 容器为例，查看它的启动命令：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># 添加 -p 以多行显示</span>\\n% runlike <span class=\\\"token parameter variable\\\">-p</span> alist\\n<span class=\\\"token function\\\">docker</span> run <span class=\\\"token parameter variable\\\">--name</span><span class=\\\"token operator\\\">=</span>alist <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">--hostname</span><span class=\\\"token operator\\\">=</span>xxxxxx <span class=\\\"token punctuation\\\">\\\\</span>\\n        --mac-address<span class=\\\"token operator\\\">=</span>xx:xx:xx:xx:xx:xx <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">--volume</span> /local/path/to/AList/data:/opt/alist/data <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">--network</span><span class=\\\"token operator\\\">=</span>bridge <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">--workdir</span><span class=\\\"token operator\\\">=</span>/opt/alist/ <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">-p</span> <span class=\\\"token number\\\">5244</span>:5244 <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">--expose</span><span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">5245</span> <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">--restart</span><span class=\\\"token operator\\\">=</span>unless-stopped <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">--runtime</span><span class=\\\"token operator\\\">=</span>runc <span class=\\\"token punctuation\\\">\\\\</span>\\n        <span class=\\\"token parameter variable\\\">--detach</span><span class=\\\"token operator\\\">=</span>true <span class=\\\"token punctuation\\\">\\\\</span>\\n        xhofe/alist <span class=\\\"token punctuation\\\">\\\\</span>\\n        /entrypoint.sh</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"摘取其中笔者确实使用到的参数，简洁的启动命令就是：\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker run --name=alist --volume /local/path/to/AList/data:/opt/alist/data -p 5244:5244 --restart=unless-stopped xhofe/alist</code>\"\n    }\n  }), \"。\"), \"\\n\", React.createElement(_components.p, null, \"随着服务容器化和自动化的发展，\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker run</code>\"\n    }\n  }), \" 也该被扫进历史的垃圾堆，彻底使用 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker-compose</code>\"\n    }\n  }), \" 命令来替代了。趁着这次机会，笔者也将所有容器的启动替换为 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker-compose</code>\"\n    }\n  }), \" 的方式，以后再遇到修改参数或镜像更新等情况，就可以省心地一键启动新容器了。\"), \"\\n\", React.createElement(_components.p, null, \"对于笔者的 AList 服务，可以编写 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker-compose.yaml</code>\"\n    }\n  }), \" 文件如下：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yml\\\"><pre class=\\\"language-yml\\\"><code class=\\\"language-yml\\\"><span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">alist</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">image</span><span class=\\\"token punctuation\\\">:</span> xhofe/alist\\n    <span class=\\\"token key atrule\\\">container_name</span><span class=\\\"token punctuation\\\">:</span> alist<span class=\\\"token punctuation\\\">-</span>server\\n    <span class=\\\"token key atrule\\\">volumes</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> /local/path/to/AList/data<span class=\\\"token punctuation\\\">:</span>/opt/alist/data\\n    <span class=\\\"token key atrule\\\">ports</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> 5244<span class=\\\"token punctuation\\\">:</span><span class=\\\"token number\\\">5244</span>\\n    <span class=\\\"token key atrule\\\">restart</span><span class=\\\"token punctuation\\\">:</span> unless<span class=\\\"token punctuation\\\">-</span>stopped</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"重定向容器日志信息到 Loki，完整的 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker-compose.yaml</code>\"\n    }\n  }), \" 文件如下：\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"yml\\\"><pre class=\\\"language-yml\\\"><code class=\\\"language-yml\\\"><span class=\\\"token key atrule\\\">services</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token key atrule\\\">alist</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token key atrule\\\">image</span><span class=\\\"token punctuation\\\">:</span> xhofe/alist\\n    <span class=\\\"token key atrule\\\">container_name</span><span class=\\\"token punctuation\\\">:</span> alist<span class=\\\"token punctuation\\\">-</span>server\\n    <span class=\\\"token key atrule\\\">volumes</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> /local/path/to/AList/data<span class=\\\"token punctuation\\\">:</span>/opt/alist/data\\n    <span class=\\\"token key atrule\\\">ports</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token punctuation\\\">-</span> 5244<span class=\\\"token punctuation\\\">:</span><span class=\\\"token number\\\">5244</span>\\n    <span class=\\\"token key atrule\\\">restart</span><span class=\\\"token punctuation\\\">:</span> unless<span class=\\\"token punctuation\\\">-</span>stopped\\n    <span class=\\\"token key atrule\\\">logging</span><span class=\\\"token punctuation\\\">:</span>\\n      <span class=\\\"token key atrule\\\">driver</span><span class=\\\"token punctuation\\\">:</span> loki\\n      <span class=\\\"token key atrule\\\">options</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token key atrule\\\">loki-url</span><span class=\\\"token punctuation\\\">:</span> http<span class=\\\"token punctuation\\\">:</span>//192.168.100.239<span class=\\\"token punctuation\\\">:</span>3100/loki/api/v1/push</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"执行命令启动容器：\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">docker-compose up -d</code>\"\n    }\n  }), \"。\"), \"\\n\", React.createElement(_components.h2, null, \"？\"), \"\\n\", React.createElement(_components.p, null, \"请看 VRC：\", React.createElement(_components.a, {\n    href: \"https://www.v2ex.com/t/1123367\"\n  }, \"《2999,入手 16+256G 内存的 macmini4，如何通过部署 50 个服务实现最大价值化》\"), \"。还有高手……！\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/homepage/homepage/blog/drafts/grafana-log-system.mdx\";\nimport {Fancybox} from \"@fancyapps/ui\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport dayjs from \"dayjs\";\nimport {Link} from \"gatsby\";\nimport * as React from \"react\";\nimport Card from \"../components/card\";\nimport Category from \"../components/category\";\nimport SEO from \"../components/seo\";\nimport Tag from \"../components/tag\";\nconst FancyBoxImage = props => {\n  const {alt = \"The author is too lazy to give an alt\", src, ...restProps} = props;\n  return React.createElement(\"a\", {\n    href: src,\n    \"data-fancybox\": \"gallery\",\n    \"data-caption\": alt\n  }, React.createElement(\"img\", Object.assign({\n    src: src,\n    alt: alt\n  }, restProps)));\n};\nconst ALink = _ref => {\n  let {href = \"\", children} = _ref;\n  const isExternalHref = !(href !== null && href !== void 0 && href.startsWith(\"#\"));\n  const parsedHref = isExternalHref ? href : `#${encodeURIComponent(href.slice(1))}`;\n  return React.createElement(\"a\", {\n    href: parsedHref,\n    target: isExternalHref ? \"_blank\" : undefined,\n    rel: \"noreferrer\"\n  }, children);\n};\nconst components = {\n  a: ALink,\n  img: FancyBoxImage,\n  Card,\n  Link\n};\nconst PostTemplate = _ref2 => {\n  let {children, data} = _ref2;\n  const {mdx: {fields: {isDraft}, frontmatter: {title, date: dateString, updated: updatedDateString, categories, tags, timeliness}}} = data;\n  const articleRef = React.useRef(null);\n  const date = dayjs(dateString);\n  const updatedDate = updatedDateString ? dayjs(updatedDateString) : date;\n  const today = dayjs();\n  const diffDays = today.diff(updatedDate, \"days\");\n  React.useEffect(() => {\n    var _articleRef$current;\n    const optimizedImageLinks = (_articleRef$current = articleRef.current) === null || _articleRef$current === void 0 ? void 0 : _articleRef$current.querySelectorAll(\"a.gatsby-resp-image-link\");\n    optimizedImageLinks === null || optimizedImageLinks === void 0 ? void 0 : optimizedImageLinks.forEach(link => {\n      const image = link.children.item(1);\n      link.setAttribute(\"data-fancybox\", \"gallery\");\n      link.setAttribute(\"data-caption\", image.alt);\n    });\n    Fancybox.bind(\"[data-fancybox]\");\n    return () => Fancybox.unbind(\"[data-fancybox]\");\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"mx-auto flex max-w-xl flex-col gap-y-12\"\n  }, React.createElement(\"div\", {\n    className: \"flex flex-col gap-4\"\n  }, (categories === null || categories === void 0 ? void 0 : categories.length) && React.createElement(Category, {\n    name: categories[0],\n    className: \"item-selectable\"\n  }), React.createElement(\"h1\", {\n    className: \"text-3xl font-bold\"\n  }, title), React.createElement(\"div\", {\n    className: \"item-secondary flex flex-col gap-2 lg:flex-row\"\n  }, dateString && React.createElement(\"span\", {\n    title: `首次发布于：${date.toString()}\\n最后更新于：${updatedDate.toString()}`\n  }, date.format(\"MM 月 DD 日 YYYY 年\")), (tags === null || tags === void 0 ? void 0 : tags.length) && React.createElement(\"div\", {\n    className: \"flex flex-1 flex-wrap gap-2 lg:before:content-['\\u2022']\"\n  }, tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag,\n    className: \"item-secondary item-selectable\"\n  }))))), React.createElement(\"article\", {\n    ref: articleRef,\n    className: \"heti post-entry\"\n  }, isDraft && React.createElement(\"blockquote\", {\n    className: \"!border-red-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u672A\\u6B63\\u5F0F\\u53D1\\u5E03\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u5C1A\\u672A\\u64B0\\u5199\\u5B8C\\u5168\\u6216\\u5B58\\u5728\\u4E00\\u4E9B\\u7EB0\\u6F0F\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), timeliness !== false && diffDays > 365 && React.createElement(\"blockquote\", {\n    className: \"!border-orange-400\"\n  }, \"\\u8FD9\\u662F\\u4E00\\u7BC7\", React.createElement(\"strong\", null, \"\\u6700\\u540E\\u66F4\\u65B0\\u4E8E \", diffDays, \" \\u5929\\u524D\"), \"\\u7684\\u535A\\u5BA2\\uFF0C\\u5185\\u5BB9\\u53EF\\u80FD\\u968F\\u7740\\u65F6\\u95F4\\u7684\\u63A8\\u79FB\\u800C\\u53D8\\u5F97\\u4E0D\\u518D\\u9002\\u7528\\uFF0C\\u5EFA\\u8BAE\\u60A8\\u4ED4\\u7EC6\\u8BC4\\u4F30\\u4FE1\\u606F\\u7684\\u6709\\u6548\\u6027\\u3002\"), React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\nconst query = \"2264136072\";\nexport const Head = _ref3 => {\n  let {data} = _ref3;\n  return React.createElement(SEO, {\n    title: String(data.mdx.frontmatter.title)\n  });\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","span","a","h3","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","_ref","children","isExternalHref","startsWith","parsedHref","encodeURIComponent","slice","target","undefined","rel","img","alt","src","restProps","Card","Link","PostTemplate","_ref2","data","mdx","fields","isDraft","frontmatter","title","date","dateString","updated","updatedDateString","categories","tags","timeliness","articleRef","dayjs","updatedDate","diffDays","diff","_articleRef$current","optimizedImageLinks","current","querySelectorAll","forEach","link","image","item","setAttribute","Fancybox","bind","unbind","className","length","Category","name","toString","format","map","tag","Tag","key","ref","MDXProvider","Head","_ref3","SEO","String","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}