"use strict";(self.webpackChunkhomepage=self.webpackChunkhomepage||[]).push([[2112],{3882:function(e,n,a){a.r(n),a.d(n,{Head:function(){return h},default:function(){return f}});var s=a(8453),t=a(6540);function l(e){const n=Object.assign({h2:"h2",p:"p",span:"span",h3:"h3",ul:"ul",li:"li",a:"a"},(0,s.R)(),e.components);return t.createElement(t.Fragment,null,t.createElement(n.h2,null,"问题描述"),"\n",t.createElement(n.p,null,"在 CentOS 环境下执行 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">yum update</code>'}})," 和 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ldconfig</code>'}})," 命令时都出现提示警告，节选内容如下所示："),"\n",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">ldconfig: /OSM/lib/librdmacm.so.1 is not a symbolic <span class="token function">link</span>\nldconfig: /OSM/lib/libgrpc++_reflection.so.1 is not a symbolic <span class="token function">link</span>\nldconfig: /OSM/lib/libupb.so.9 is not a symbolic <span class="token function">link</span></code></pre></div>'}}),"\n",t.createElement(n.h2,null,"错误分析"),"\n",t.createElement(n.p,null,"进入到对应目录下查找可以发现，这里的 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">librdmacm.so.1</code>'}})," 与 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">librdmacm.so.1.1.17.4</code>'}})," 实际上是相同的动态库文件，而非我们期望的符号链接和动态库文件。"),"\n",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@xxx ~<span class="token punctuation">]</span><span class="token comment"># cd /OSM/lib</span>\n<span class="token punctuation">[</span>root@xxx lib<span class="token punctuation">]</span><span class="token comment"># find librdmacm.so.1* | xargs ls -l</span>\n-rwx------. <span class="token number">1</span> root root <span class="token number">442208</span> Mar  <span class="token number">9</span> <span class="token number">16</span>:13 librdmacm.so.1\n-rwx------. <span class="token number">1</span> root root <span class="token number">442208</span> Mar  <span class="token number">9</span> <span class="token number">16</span>:13 librdmacm.so.1.1.17.4</code></pre></div>'}}),"\n",t.createElement(n.p,null,"这个错误的产生原因是，",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">librdmacm.so.1</code>'}})," 在正常情况下应该是一个指向 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">librdmacm.so.1.1.17.4</code>'}})," 文件的软链接，但却变成了一个动态库文件。"),"\n",t.createElement(n.p,null,"在一般情况下，这个错误并不会导致严重的问题；但假如目录下有多个不同版本的动态库文件，软链接可能无法正确获取到最新版本，产生隐患。"),"\n",t.createElement(n.p,null,"解决这个问题只需要将 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">librdmacm.so.1</code>'}})," 修改为正常的软链接文件，重新链接两个文件就可以了。"),"\n",t.createElement(n.h2,null,"解决方案"),"\n",t.createElement(n.p,null,"执行 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ln -sf [动态库文件或源文件] [符号链接或目标文件]</code>'}})," 即可，其中 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">-s</code>'}})," 指创建软链接，",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">-f</code>'}})," 指强制执行。例如："),"\n",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@xxx lib<span class="token punctuation">]</span><span class="token comment"># ln -sf librdmacm.so.1.1.17.4 librdmacm.so.1</span>\n<span class="token punctuation">[</span>root@xxx lib<span class="token punctuation">]</span><span class="token comment"># find librdmacm.so.1* | xargs ls -l</span>\nlrwxrwxrwx. <span class="token number">1</span> root root     <span class="token number">21</span> Mar <span class="token number">10</span> <span class="token number">16</span>:26 librdmacm.so.1 -<span class="token operator">></span> librdmacm.so.1.1.17.4\n-rwx------. <span class="token number">1</span> root root <span class="token number">442208</span> Mar  <span class="token number">9</span> <span class="token number">16</span>:13 librdmacm.so.1.1.17.4</code></pre></div>'}}),"\n",t.createElement(n.p,null,"现在正如我们预期的，",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">librdmacm.so.1</code>'}})," 正确指向了 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">librdmacm.so.1.1.17.4</code>'}}),"。"),"\n",t.createElement(n.h3,null,"更好的方式"),"\n",t.createElement(n.p,null,"假如同时报了很多个类似的提示，应当如何处理呢？"),"\n",t.createElement(n.p,null,"我们知道执行 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ldconfig</code>'}})," 命令时，会自动为关联目录下的所有动态库文件创建对应的软链接。因此我们只需要删除掉这些重复的文件，再执行命令就可以了。"),"\n",t.createElement(n.p,null,"将 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ldconfig</code>'}})," 命令的错误输出重定向到临时文件中，读取内容，组合使用 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">cut</code>'}})," 和 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">rm</code>'}})," 命令即可实现删除重复文件，接下来删除存储错误信息的临时文件。最后再次执行 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ldconfig</code>'}})," 创建软链接。"),"\n",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token comment"># 标准错误输出到 dupNote 临时文件中</span>\nldconfig <span class="token operator"><span class="token file-descriptor important">2</span>></span> dupNote\n<span class="token comment"># 删除重复的动态库（非软链接）文件</span>\n<span class="token function">cat</span> dupNote <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">11</span>- <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">23</span>- <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span>\n<span class="token comment"># 删除刚刚创建的临时文件</span>\n<span class="token function">rm</span> <span class="token parameter variable">-rf</span> dupNote\n<span class="token comment"># 创建软链接</span>\nldconfig</code></pre></div>'}}),"\n",t.createElement(n.p,null,"当然可以合起来变成一条命令使用："),"\n",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">ldconfig <span class="token operator"><span class="token file-descriptor important">2</span>></span> dupNote <span class="token punctuation">;</span> <span class="token function">cat</span> dupNote <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">11</span>- <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-c</span> <span class="token number">23</span>- <span class="token operator">|</span> <span class="token function">rev</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token punctuation">;</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> dupNote <span class="token punctuation">;</span> ldconfig</code></pre></div>'}}),"\n",t.createElement(n.p,null,"现在执行 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ldconfig</code>'}})," 不再提示 ",t.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">*** is not a symbolic link</code>'}})," 错误，问题顺利解决！"),"\n",t.createElement(n.h2,null,"相关链接"),"\n",t.createElement(n.ul,null,"\n",t.createElement(n.li,null,t.createElement(n.a,{href:"https://blog.csdn.net/qq_34213260/article/details/107399507"},"/usr/lib/*** is not a symbolic link 问题解决 - CSDN")),"\n",t.createElement(n.li,null,t.createElement(n.a,{href:"https://www.runoob.com/linux/linux-comm-ln.html"},"Linux ln 命令 - 菜鸟教程")),"\n"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,s.R)(),e.components);return n?t.createElement(n,e,t.createElement(l,e)):l(e)},o=a(197),r=a(4353),p=a.n(r),m=a(4810),u=a(6947),i=a(4017),d=a(1042),g=a(1038);const b={a:e=>{let{href:n="",children:a}=e;const s=!(null!=n&&n.startsWith("#")),l=s?n:`#${encodeURIComponent(n.slice(1))}`;return t.createElement("a",{href:l,target:s?"_blank":void 0,rel:"noreferrer"},a)},img:e=>{const{alt:n="The author is too lazy to give an alt",src:a,...s}=e;return t.createElement("a",{href:a,"data-fancybox":"gallery","data-caption":n},t.createElement("img",Object.assign({src:a,alt:n},s)))},Card:u.A,Link:m.N_},k=e=>{let{children:n,data:a}=e;const{mdx:{frontmatter:{title:l,date:c,updated:r,categories:m,tags:u,timeliness:d=!0}}}=a,k=t.useRef(null),h=p()(c),f=r?p()(r):h,E=p()().diff(f,"days");return t.useEffect((()=>{var e;const n=null===(e=k.current)||void 0===e?void 0:e.querySelectorAll("a.gatsby-resp-image-link");return null==n||n.forEach((e=>{const n=e.children.item(1);e.setAttribute("data-fancybox","gallery"),e.setAttribute("data-caption",n.alt)})),o.lX.bind("[data-fancybox]"),()=>o.lX.unbind("[data-fancybox]")}),[]),t.createElement("div",{className:"mx-auto flex max-w-xl flex-col gap-y-12"},t.createElement("div",{className:"flex flex-col gap-4"},(null==m?void 0:m.length)&&t.createElement(i.A,{name:m[0],className:"item-selectable"}),t.createElement("h1",{className:"text-3xl font-bold"},l),t.createElement("div",{className:"item-secondary flex flex-col gap-2 lg:flex-row"},c&&t.createElement("span",{title:`首次发布于：${h.toString()}\n最后更新于：${f.toString()}`},h.format("MM 月 DD 日 YYYY 年")),(null==u?void 0:u.length)&&t.createElement("div",{className:"flex flex-1 flex-wrap gap-2 lg:before:content-['•']"},u.map((e=>t.createElement(g.A,{key:e,name:e,className:"item-secondary item-selectable"})))))),t.createElement("article",{ref:k,className:"heti post-entry"},d&&E>365&&t.createElement("blockquote",{className:"border-l-4 border-orange-400"},"这是一篇",t.createElement("strong",null,"最后更新于 ",E," 天前"),"的博客，内容可能随着时间的推移而变得不再适用，建议您仔细评估信息的有效性。"),t.createElement(s.x,{components:b},n)))},h=e=>{let{data:n}=e;return t.createElement(d.A,{title:String(n.mdx.frontmatter.title)})};function f(e){return t.createElement(k,e,t.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-tsx-content-file-path-blog-posts-xxx-is-not-a-symbolic-link-mdx-ae759905a5e176f28f69.js.map